{"version":3,"sources":["components/logo.png","components/Gender.js","components/Religion.js","components/Education.js","components/BloodType.js","components/Occupation.js","components/Modal.js","components/BasemapToggle.js","components/FloatWindow.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Gender","state","data","dataset","labels","datasets","backgroundColor","borderColor","borderWidth","componentDidMount","_this","ping","axios","get","then","resp","console","log","getGenders","_this$props","props","type","params","region","no_kec","no_kel","no_rw","_ref","map","g","TOTAL","setState","_this$state","this","react_default","a","createElement","Card","className","CardBody","es","width","height","Table","bordered","striped","dat","i","JENIS_KELAMIN","d","reduce","b","parseInt","Component","Religion","_this$state$dataset","AGAMA","Object","keys","col","key","Education","PENDIDIKAN","BloodType","GOLONGAN_DARAH","options","legend","display","x","y","PEKERJAAN","Row","noGutters","Col","md","size","BasemapToggle","show","_this2","basemaps","activeBasemaps","updateBasemaps","Fragment","onClick","id","findIndex","name","hide","filter","setOpacity","push","Button","color","FloatWindow","top","left","types","Jenis Kelamin","Agama","Pendidikan","Golongan Darah","Pekerjaan","getData","onchange","ev","target","value","t","toUpperCase","_this$state2","_this$props2","style","position","react_draggable_default","defaultPosition","background","backdropFilter","concat","district","subdistrict","onChange","dt","App","geo","styles","districts","subdistricts","neighbors","neighbor","sidebar","showBaseMap","zoom","length","getDistricts","_callee","regenerator_default","wrap","_context","prev","next","sent","stop","getSubdistricts","_callee2","_context2","getNeighbors","_callee3","n","_context3","getBasemaps","_callee4","z","_context4","getZoom","click","e","bmap","checked","clearData","GeoMan","container","center","Styles","setRegionLabelEvent","properties","on","_this3","document","title","_this$state3","BasemapToggle_BasemapToggle","src","require","alt","FloatWindow_FloatWindow","Container","fluid","overflow","htmlFor","asyncToGenerator","mark","_callee5","_context5","setStyle","setTimeout","clearFocuses","focus","onDoubleClick","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6b193d9b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.a3182c1b.png\";","import React, { Component } from 'react'\nimport { Card, CardBody, Table } from 'reactstrap';\nimport { Doughnut } from 'react-chartjs-2';\nimport axios from 'axios';\n\nexport default class Gender extends Component {\n\n  state = {\n    data: [],\n    dataset: {\n      labels: ['Laki - laki', 'Perempuan'],\n      datasets: [{\n        backgroundColor: [\n          'rgba(54, 162, 235, 0.2)',\n          'rgba(255, 99, 132, 0.2)',\n        ],\n        borderColor: [\n          'rgba(54, 162, 235, 0.7)',\n          'rgba(255, 99, 132, 0.7)',\n        ],\n        borderWidth: 1,\n        data: [0, 0]\n      }]\n    }\n  }\n\n  componentDidMount = () => {\n    this.ping();\n  }\n\n  ping = () => {\n    axios.get('http://10.71.71.24:8080/api/index.php/citizens/ping').then(resp => {\n      console.log(resp);\n      this.getGenders();\n    })\n  }\n\n  getGenders = () => {\n    const { type, data } = this.props;\n    const params = {\n      region: this.props.type,\n      type: 'jenis_kelamin',\n    };\n    if (type === 'kec') {\n      params.no_kec = data.no_kec\n    } else if (type === 'kel') {\n      params.no_kec = data.no_kec\n      params.no_kel = data.no_kel\n    } else if (type === 'rw') {\n      params.no_kec = data.no_kec\n      params.no_kel = data.no_kel\n      params.no_rw = data.no_rw\n    }\n    axios.get('http://10.71.71.24:8080/api/index.php/citizens/statistics', {\n      params\n    }).then(({ data }) => {\n      const { dataset: { datasets } } = this.state;\n      datasets[0].data = data.map(g => {\n        return g.TOTAL\n      })\n      this.setState({ data, dataset: { datasets } });\n    })\n  }\n\n  render() {\n    const { data, dataset } = this.state\n    console.log(data);\n    return (\n      <Card className=\"border-0 shadow\">\n        <CardBody>\n          <Doughnut data={dataset} width='100%' height='100' />\n        </CardBody>\n        <Table bordered striped>\n          <thead>\n            <tr>\n              <th>Jenis Kelamin</th>\n              <th>Jumlah</th>\n            </tr>\n          </thead>\n          <tbody>\n            {typeof data !== 'undefined' ? data.map((dat, i) => (\n              <tr>\n                <td>{dat.JENIS_KELAMIN}</td>\n                <td>{dat.TOTAL}</td>\n              </tr>\n            )) : ''}\n          </tbody>\n        </Table>\n        <CardBody>\n          Total data : {typeof data !== 'undefined' && data.map(d => d.TOTAL).reduce((a, b) => (parseInt(a) + parseInt(b)), 0)}\n        </CardBody>\n      </Card>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { Card, CardBody, Table } from 'reactstrap';\nimport { Doughnut } from 'react-chartjs-2';\nimport axios from 'axios';\n\nexport default class Religion extends Component {\n\n  state = {\n    data: [{a:0,b:0}],\n    dataset: {\n      labels: [],\n      datasets: [{\n        backgroundColor: [\n          'rgba(54, 162, 235, 0.2)',\n          'rgba(255, 99, 132, 0.2)',\n          'rgba(255, 206, 86, 0.2)',\n          'rgba(75, 192, 192, 0.2)',\n          'rgba(153, 102, 255, 0.2)',\n          'rgba(255, 159, 64, 0.2)'\n        ],\n        borderColor: [\n          'rgba(54, 162, 235, 0.7)',\n          'rgba(255, 99, 132, 0.7)',\n          'rgba(255, 206, 86, 0.7)',\n          'rgba(75, 192, 192, 0.7)',\n          'rgba(153, 102, 255, 0.7)',\n          'rgba(255, 159, 64, 0.7)'\n        ],\n        borderWidth: 1,\n        data: [0, 0]\n      }]\n    }\n  }\n\n  componentDidMount = () => {\n    this.ping();\n  }\n\n  ping = () => {\n    axios.get('http://10.71.71.24:8080/api/index.php/citizens/ping').then(resp => {\n      console.log(resp);\n      this.getGenders();\n    })\n  }\n\n  getGenders = () => {\n    const { type, data } = this.props;\n    const params = {\n      region: this.props.type,\n      type: 'agama',\n    };\n    if (type === 'kec') {\n      params.no_kec = data.no_kec\n    } else if (type === 'kel') {\n      params.no_kec = data.no_kec\n      params.no_kel = data.no_kel\n    } else if (type === 'rw') {\n      params.no_kec = data.no_kec\n      params.no_kel = data.no_kel\n      params.no_rw = data.no_rw\n    }\n    axios.get('http://10.71.71.24:8080/api/index.php/citizens/statistics', {\n      params\n    }).then(({ data }) => {\n      let { dataset: { datasets, labels } } = this.state;\n      datasets[0].data = data.map(g => {\n        return g.TOTAL\n      })\n      labels = data.map(g => (g.AGAMA))\n      this.setState({ data, dataset: { datasets, labels }, });\n    })\n  }\n\n  render() {\n    const { data, dataset } = this.state\n    return (\n      <Card className=\"border-0 shadow\">\n        <CardBody>\n          <Doughnut data={dataset} width='100%' height='100' />\n        </CardBody>\n        <Table bordered striped>\n          <thead>\n            <tr>\n              {/* {typeof data !== 'undefined' ? data.map((dat) => ( */}\n                {Object.keys(data[0]).map((col, i) => (\n                  <th key={i}>{col}</th>\n                ))}\n              {/* )) : ''} */}\n            </tr>\n          </thead>\n          <tbody>\n            {typeof data !== 'undefined' ? data.map((dat, i) => (\n              <tr key={i}>\n                {Object.keys(dat).map((col, i) => (\n                  <td key={i}>{dat[col]}</td>\n                ))}\n              </tr>\n            )) : ''}\n          </tbody>\n        </Table>\n        <CardBody>\n          Total data : {typeof data !== 'undefined' && data.map(d => d.TOTAL).reduce((a, b) => (parseInt(a) + parseInt(b)), 0)}\n        </CardBody>\n      </Card>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { Card, CardBody, Table } from 'reactstrap';\nimport { Doughnut } from 'react-chartjs-2';\nimport axios from 'axios';\n\nexport default class Education extends Component {\n\n  state = {\n    data: [{a:0,b:0}],\n    dataset: {\n      labels: [],\n      datasets: [{\n        backgroundColor: [\n          'rgba(54, 162, 235, 0.2)',\n          'rgba(255, 99, 132, 0.2)',\n          'rgba(255, 206, 86, 0.2)',\n          'rgba(75, 192, 192, 0.2)',\n          'rgba(153, 102, 255, 0.2)',\n          'rgba(255, 159, 64, 0.2)',\n          'rgba(34, 47, 62,0.2)',\n          'rgba(16, 172, 132,0.2)',\n          'rgba(95, 39, 205,0.2)',\n          'rgba(1, 163, 164,0.2)',\n          'rgba(255, 159, 67,0.2)'\n        ],\n        borderColor: [\n          'rgba(54, 162, 235, 0.7)',\n          'rgba(255, 99, 132, 0.7)',\n          'rgba(255, 206, 86, 0.7)',\n          'rgba(75, 192, 192, 0.7)',\n          'rgba(153, 102, 255, 0.7)',\n          'rgba(255, 159, 64, 0.7)',\n          'rgba(34, 47, 62,0.7)',\n          'rgba(16, 172, 132,0.7)',\n          'rgba(95, 39, 205,0.7)',\n          'rgba(1, 163, 164,0.7)',\n          'rgba(255, 159, 67,0.7)'\n        ],\n        borderWidth: 1,\n        data: [0, 0]\n      }]\n    }\n  }\n\n  componentDidMount = () => {\n    this.ping();\n  }\n\n  ping = () => {\n    axios.get('http://10.71.71.24:8080/api/index.php/citizens/ping').then(resp => {\n      console.log(resp);\n      this.getGenders();\n    })\n  }\n\n  getGenders = () => {\n    const { type, data } = this.props;\n    const params = {\n      region: this.props.type,\n      type: 'pendidikan',\n    };\n    if (type === 'kec') {\n      params.no_kec = data.no_kec\n    } else if (type === 'kel') {\n      params.no_kec = data.no_kec\n      params.no_kel = data.no_kel\n    } else if (type === 'rw') {\n      params.no_kec = data.no_kec\n      params.no_kel = data.no_kel\n      params.no_rw = data.no_rw\n    }\n    axios.get('http://10.71.71.24:8080/api/index.php/citizens/statistics', {\n      params\n    }).then(({ data }) => {\n      let { dataset: { datasets, labels } } = this.state;\n      datasets[0].data = data.map(g => {\n        return g.TOTAL\n      })\n      labels = data.map(g => (g.PENDIDIKAN))\n      this.setState({ data, dataset: { datasets, labels }, });\n    })\n  }\n\n  render() {\n    const { data, dataset } = this.state\n    return (\n      <Card className=\"border-0 shadow\">\n        <CardBody>\n          <Doughnut data={dataset} width='100%' height='100' />\n        </CardBody>\n        <Table bordered striped>\n          <thead>\n            <tr>\n              {/* {typeof data !== 'undefined' ? data.map((dat) => ( */}\n                {Object.keys(data[0]).map((col, i) => (\n                  <th key={i}>{col}</th>\n                ))}\n              {/* )) : ''} */}\n            </tr>\n          </thead>\n          <tbody>\n            {typeof data !== 'undefined' ? data.map((dat, i) => (\n              <tr key={i}>\n                {Object.keys(dat).map((col, i) => (\n                  <td key={i}>{dat[col]}</td>\n                ))}\n              </tr>\n            )) : ''}\n          </tbody>\n        </Table>\n        <CardBody>\n          Total data : {typeof data !== 'undefined' && data.map(d => d.TOTAL).reduce((a, b) => (parseInt(a) + parseInt(b)), 0)}\n        </CardBody>\n      </Card>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { Card, CardBody, Table } from 'reactstrap';\nimport { Doughnut } from 'react-chartjs-2';\nimport axios from 'axios';\n\nexport default class BloodType extends Component {\n\n  state = {\n    data: [{a:0,b:0}],\n    dataset: {\n      labels: [],\n      datasets: [{\n        backgroundColor: [\n          'rgba(54, 162, 235, 0.2)',\n          'rgba(255, 99, 132, 0.2)',\n          'rgba(255, 206, 86, 0.2)',\n          'rgba(75, 192, 192, 0.2)',\n          'rgba(153, 102, 255, 0.2)',\n          'rgba(255, 159, 64, 0.2)',\n          'rgba(34, 47, 62,0.2)',\n          'rgba(16, 172, 132,0.2)',\n          'rgba(95, 39, 205,0.2)',\n          'rgba(1, 163, 164,0.2)',\n          'rgba(255, 159, 67,0.2)',\n          'rgba(29, 209, 161,0.2)',\n          'rgba(84, 160, 255,0.2)'\n        ],\n        borderColor: [\n          'rgba(54, 162, 235, 0.7)',\n          'rgba(255, 99, 132, 0.7)',\n          'rgba(255, 206, 86, 0.7)',\n          'rgba(75, 192, 192, 0.7)',\n          'rgba(153, 102, 255, 0.7)',\n          'rgba(255, 159, 64, 0.7)',\n          'rgba(34, 47, 62,0.7)',\n          'rgba(16, 172, 132,0.7)',\n          'rgba(95, 39, 205,0.7)',\n          'rgba(1, 163, 164,0.7)',\n          'rgba(255, 159, 67,0.7)',\n          'rgba(29, 209, 161,0.7)',\n          'rgba(84, 160, 255,0.7)'\n        ],\n        borderWidth: 1,\n        data: [0, 0]\n      }]\n    }\n  }\n\n  componentDidMount = () => {\n    this.ping();\n  }\n\n  ping = () => {\n    axios.get('http://10.71.71.24:8080/api/index.php/citizens/ping').then(resp => {\n      console.log(resp);\n      this.getGenders();\n    })\n  }\n\n  getGenders = () => {\n    const { type, data } = this.props;\n    const params = {\n      region: this.props.type,\n      type: 'golongan_darah',\n    };\n    if (type === 'kec') {\n      params.no_kec = data.no_kec\n    } else if (type === 'kel') {\n      params.no_kec = data.no_kec\n      params.no_kel = data.no_kel\n    } else if (type === 'rw') {\n      params.no_kec = data.no_kec\n      params.no_kel = data.no_kel\n      params.no_rw = data.no_rw\n    }\n    axios.get('http://10.71.71.24:8080/api/index.php/citizens/statistics', {\n      params\n    }).then(({ data }) => {\n      let { dataset: { datasets, labels } } = this.state;\n      datasets[0].data = data.map(g => {\n        return g.TOTAL\n      })\n      labels = data.map(g => (g.GOLONGAN_DARAH))\n      this.setState({ data, dataset: { datasets, labels }, });\n    })\n  }\n\n  render() {\n    const { data, dataset } = this.state\n    return (\n      <Card className=\"border-0 shadow\">\n        <CardBody>\n          <Doughnut data={dataset} width='100%' height='100' />\n        </CardBody>\n        <Table bordered striped>\n          <thead>\n            <tr>\n              {/* {typeof data !== 'undefined' ? data.map((dat) => ( */}\n                {Object.keys(data[0]).map((col, i) => (\n                  <th key={i}>{col}</th>\n                ))}\n              {/* )) : ''} */}\n            </tr>\n          </thead>\n          <tbody>\n            {typeof data !== 'undefined' ? data.map((dat, i) => (\n              <tr key={i}>\n                {Object.keys(dat).map((col, i) => (\n                  <td key={i}>{dat[col]}</td>\n                ))}\n              </tr>\n            )) : ''}\n          </tbody>\n        </Table>\n        <CardBody>\n          Total data : {typeof data !== 'undefined' && data.map(d => d.TOTAL).reduce((a, b) => (parseInt(a) + parseInt(b)), 0)}\n        </CardBody>\n      </Card>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { Card, CardBody, Table, Row, Col } from 'reactstrap';\nimport { HorizontalBar } from 'react-chartjs-2';\nimport axios from 'axios';\n\nexport default class Education extends Component {\n\n  state = {\n    data: [{ a: 0, b: 0 }],\n    dataset: {\n      labels: [],\n      datasets: [{\n        backgroundColor: 'rgba(255, 99, 132, 0.2)',\n        borderColor: 'rgba(255, 99, 132, 0.7)',\n        borderWidth: 1,\n        data: [0, 0],\n      }],\n    },\n    options: {\n      legend: {\n        display: false\n      }\n    }\n  }\n\n  componentDidMount = () => {\n    this.ping();\n  }\n\n  ping = () => {\n    axios.get('http://10.71.71.24:8080/api/index.php/citizens/ping').then(resp => {\n      console.log(resp);\n      this.getGenders();\n    })\n  }\n\n  getGenders = () => {\n    const { type, data } = this.props;\n    const params = {\n      region: this.props.type,\n      type: 'pekerjaan',\n    };\n    if (type === 'kec') {\n      params.no_kec = data.no_kec\n    } else if (type === 'kel') {\n      params.no_kec = data.no_kec\n      params.no_kel = data.no_kel\n    } else if (type === 'rw') {\n      params.no_kec = data.no_kec\n      params.no_kel = data.no_kel\n      params.no_rw = data.no_rw\n    }\n    axios.get('http://10.71.71.24:8080/api/index.php/citizens/statistics', {\n      params\n    }).then(({ data }) => {\n      let { dataset: { datasets, labels } } = this.state;\n      datasets[0].data = data.map(g => {\n        return { x: g.TOTAL, y: g.PEKERJAAN }\n      })\n      labels = data.map(g => (g.PEKERJAAN))\n      this.setState({ data, dataset: { datasets, labels }, });\n    })\n  }\n\n  render() {\n    const { data, dataset,options } = this.state\n    return (\n      <Card className=\"border-0 shadow my-2\">\n        <Row noGutters>\n          <Col md=\"4\">\n            <Table size=\"sm\" bordered striped>\n              <thead>\n                <tr>\n                  {/* {typeof data !== 'undefined' ? data.map((dat) => ( */}\n                  {Object.keys(data[0]).map((col, i) => (\n                    <th key={i}>{col}</th>\n                  ))}\n                  {/* )) : ''} */}\n                </tr>\n              </thead>\n              <tbody>\n                {typeof data !== 'undefined' ? data.map((dat, i) => (\n                  <tr key={i}>\n                    {Object.keys(dat).map((col, i) => (\n                      <td key={i}>{dat[col]}</td>\n                    ))}\n                  </tr>\n                )) : ''}\n              </tbody>\n            </Table>\n          </Col>\n          <Col className=\"h-100\" md=\"8\">\n            <CardBody className=\"h-100\">\n              <HorizontalBar options={options} data={dataset} width='100%' height='100%' />\n            </CardBody>\n          </Col>\n        </Row>\n        <CardBody>\n          Total data : {typeof data !== 'undefined' && data.map(d => d.TOTAL).reduce((a, b) => (parseInt(a) + parseInt(b)), 0)}\n        </CardBody>\n      </Card>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { Modal, ModalBody, ModalHeader, CardColumns } from 'reactstrap';\nimport Gender from './Gender';\nimport Religion from './Religion';\nimport Education from './Education';\nimport BloodType from './BloodType';\nimport Occupation from './Occupation';\nimport axios from 'axios';\n\nexport default class ModalInfo extends Component {\n\n  componentDidMount = () => {\n    this.ping();\n  }\n\n  ping = () => {\n    axios.get('http://10.71.71.24:8080/api/index.php/citizens/ping').then(resp => {\n      console.log(resp);\n    })\n  }\n\n  render() {\n    const { type, data } = this.props;\n    return (\n      <>\n        <Modal size=\"xl\" toggle={this.props.onClick} isOpen onClosed={this.props.onClick}>\n          <ModalHeader toggle={this.props.onClick}>\n            {type === 'kec' ? `Kecamatan ${data.name}`\n              :\n              type === 'kel' ? `Kecamatan ${data.district} - Kelurahan ${data.name}`\n                :\n                type === 'rw' ? `Kecamatan ${data.district} - Kelurahan ${data.subdistrict} - Lingkungan ${data.name}`\n                  :\n                  ''\n            }\n          </ModalHeader>\n          <ModalBody>\n            <CardColumns>\n                <Gender data={data} type={type} />\n                <Religion data={data} type={type} />\n                <Education data={data} type={type} />\n                <BloodType data={data} type={type} />\n            </CardColumns>\n            <Occupation data={data} type={type} />\n          </ModalBody>\n        </Modal>\n      </>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { Card, CardBody, Button } from 'reactstrap';\n\nexport default class BasemapToggle extends Component {\n  state = {\n    show : false\n  }\n  render() {\n    const { basemaps, activeBasemaps, updateBasemaps } = this.props;\n    return (\n      <>\n        {!this.state.show && <div onClick={() => this.setState({ show : true })} className=\"btn-toggle-container\">\n          <p className=\"m-0\">Basemap</p>\n        </div>}\n        {this.state.show && <div className=\"toggle-basemap-container text-white\">\n          <p className=\"my-2 font-weight-light\">Basemap</p>\n          <hr className=\"text-white border-white\" />\n          {basemaps.map(b => (\n            <Card key={b.id}\n              className={activeBasemaps.findIndex(x => x === b.name) > -1 ? \"bg-primary border-0 my-2\" : \"bg-dark border-0 my-2\"}\n              onClick={() => {\n                if (activeBasemaps.findIndex(x => x === b.name) > -1) {\n                  b.hide()\n                  updateBasemaps(activeBasemaps.filter(a => a !== b.name))\n                } else {                  \n                  b.show()\n                  b.setOpacity(0.5)\n                  activeBasemaps.push(b.name);\n                  updateBasemaps(activeBasemaps)\n                }\n              }}\n            >\n              <CardBody className=\"p-2\">{b.name}</CardBody>\n            </Card>\n          ))}\n          <hr/>\n          <Button color=\"light\" size=\"sm\" onClick={() => this.setState({ show : false })}>Tutup</Button>\n        </div>}\n      </>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { Card, CardBody, Button } from 'reactstrap'\nimport { Doughnut, HorizontalBar } from 'react-chartjs-2'\nimport axios from 'axios'\nimport Draggable from 'react-draggable'\n\nexport default class FloatWindow extends Component {\n    state = {\n        top: 60,\n        left: 15,\n        types: {\n            'Jenis Kelamin': 'jenis_kelamin',\n            'Agama': 'agama',\n            'Pendidikan': 'pendidikan',\n            'Golongan Darah': 'golongan_darah',\n            'Pekerjaan': 'pekerjaan',\n        },\n        type: 'Jenis Kelamin',\n        data: [{ a: 0, b: 0 }],\n        dataset: {\n            labels: [],\n            datasets: [{\n                backgroundColor: [\n                    'rgba(54, 162, 235, 0.2)',\n                    'rgba(255, 99, 132, 0.2)',\n                    'rgba(255, 206, 86, 0.2)',\n                    'rgba(75, 192, 192, 0.2)',\n                    'rgba(153, 102, 255, 0.2)',\n                    'rgba(255, 159, 64, 0.2)',\n                    'rgba(34, 47, 62,0.2)',\n                    'rgba(16, 172, 132,0.2)',\n                    'rgba(95, 39, 205,0.2)',\n                    'rgba(1, 163, 164,0.2)',\n                    'rgba(255, 159, 67,0.2)',\n                    'rgba(29, 209, 161,0.2)',\n                    'rgba(84, 160, 255,0.2)'\n                ],\n                borderColor: [\n                    'rgba(54, 162, 235, 0.7)',\n                    'rgba(255, 99, 132, 0.7)',\n                    'rgba(255, 206, 86, 0.7)',\n                    'rgba(75, 192, 192, 0.7)',\n                    'rgba(153, 102, 255, 0.7)',\n                    'rgba(255, 159, 64, 0.7)',\n                    'rgba(34, 47, 62,0.7)',\n                    'rgba(16, 172, 132,0.7)',\n                    'rgba(95, 39, 205,0.7)',\n                    'rgba(1, 163, 164,0.7)',\n                    'rgba(255, 159, 67,0.7)',\n                    'rgba(29, 209, 161,0.7)',\n                    'rgba(84, 160, 255,0.7)'\n                ],\n                borderWidth: 1,\n                data: [0, 0]\n            }]\n        }\n    }\n\n    componentDidMount = () => {\n        this.getData()\n    }\n\n    onchange = ev => {\n        this.setState({ type: ev.target.value }, this.getData);\n    }\n\n    getData = () => {\n        const { type, data } = this.props;\n        const { type: t, types } = this.state;\n        const params = {\n            region: this.props.type,\n            type: types[t],\n        };\n\n\n        if (type === 'kec') {\n            params.no_kec = data.no_kec\n        } else if (type === 'kel') {\n            params.no_kec = data.no_kec\n            params.no_kel = data.no_kel\n        } else if (type === 'rw') {\n            params.no_kec = data.no_kec\n            params.no_kel = data.no_kel\n            params.no_rw = data.no_rw\n        }\n        axios.get('http://10.71.71.24:8080/api/index.php/citizens/statistics', {\n            params\n        }).then(({ data }) => {\n            let { dataset: { datasets, labels } } = this.state;\n            if (typeof datasets[0].data !== 'undefined') {\n                if (t === 'Pekerjaan') {\n                    datasets[0].backgroundColor = 'rgba(54, 162, 235, 0.2)'\n                    datasets[0].borderColor = 'rgba(54, 162, 235, 0.7)'\n                } else {\n                    datasets[0].backgroundColor = [\n                        'rgba(54, 162, 235, 0.2)',\n                        'rgba(255, 99, 132, 0.2)',\n                        'rgba(255, 206, 86, 0.2)',\n                        'rgba(75, 192, 192, 0.2)',\n                        'rgba(153, 102, 255, 0.2)',\n                        'rgba(255, 159, 64, 0.2)',\n                        'rgba(34, 47, 62,0.2)',\n                        'rgba(16, 172, 132,0.2)',\n                        'rgba(95, 39, 205,0.2)',\n                        'rgba(1, 163, 164,0.2)',\n                        'rgba(255, 159, 67,0.2)',\n                        'rgba(29, 209, 161,0.2)',\n                        'rgba(84, 160, 255,0.2)'\n                    ]\n                    datasets[0].borderColor = [\n                        'rgba(54, 162, 235, 0.7)',\n                        'rgba(255, 99, 132, 0.7)',\n                        'rgba(255, 206, 86, 0.7)',\n                        'rgba(75, 192, 192, 0.7)',\n                        'rgba(153, 102, 255, 0.7)',\n                        'rgba(255, 159, 64, 0.7)',\n                        'rgba(34, 47, 62,0.7)',\n                        'rgba(16, 172, 132,0.7)',\n                        'rgba(95, 39, 205,0.7)',\n                        'rgba(1, 163, 164,0.7)',\n                        'rgba(255, 159, 67,0.7)',\n                        'rgba(29, 209, 161,0.7)',\n                        'rgba(84, 160, 255,0.7)'\n                    ]\n                }\n\n                datasets[0].data = data.map(g => {\n                    return g.TOTAL\n                })\n                labels = data.map(g => {\n                    console.log(g[types[t]])\n                    return (g[types[t].toUpperCase()])\n                })\n                this.setState({ data, dataset: { datasets, labels }, });\n            }\n        })\n    }\n\n    render() {\n        const { types, type, dataset, data : d } = this.state;\n        const {data, type : t} = this.props;\n        return (\n            <div style={{ position: 'fixed', width: type !== 'Pekerjaan' ? 350 : 700 }}>\n                <Draggable\n                    defaultPosition={{ x: 227, y: 41 }}\n                >\n                    <Card style={{\n                        background: 'rgba(255,255,255,0.5)',\n                        backdropFilter: 'blur(10px)',\n                    }} className=\"border-0 shadow text-left\">\n                        <CardBody className=\"p-2\">\n                            <div className=\"d-flex justify-content-between align-items-center\">\n                                <Button size=\"sm\" className=\"d-inline-block\" color=\"danger\" onClick={() => this.props.onClick()}>Tutup</Button>\n                                <p className=\"m-0 text-right\">{t === 'kec' ? `Kecamatan ${data.name}`\n                                    :\n                                    t === 'kel' ? `Kecamatan ${data.district} - Kelurahan ${data.name}`\n                                        :\n                                        t === 'rw' ? `Kecamatan ${data.district} - Kelurahan ${data.subdistrict} - Lingkungan ${data.name}`\n                                            :\n                                            ''\n                                }</p>\n                            </div>\n                            <hr />\n                            <select className=\"form-control form-control-sm\" onChange={this.onchange} value={type} id=\"\">\n                                {Object.keys(types).map((t, i) => (\n                                    <option key={i} value={t}>{t}</option>\n                                ))}\n                            </select>\n                            {type !== 'Pekerjaan' && <Doughnut data={dataset} width=\"100%\" height=\"100%\" />}\n                            {type === 'Pekerjaan' && <HorizontalBar options={{\n                                legend: { display: false }\n                            }} data={dataset} width=\"100%\" height=\"100%\" />}\n                            <hr/>\n                            Total data : {typeof d !== 'undefined' && d.map(dt => dt.TOTAL).reduce((a, b) => (parseInt(a) + parseInt(b)), 0)}\n                        </CardBody>\n                    </Card>\n                </Draggable>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport { Row, Col, Container, Card, CardBody, Button } from 'reactstrap';\nimport ModalWindow from './components/Modal';\nimport GeoMan from 'geoman-client';\nimport axios from 'axios';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport BasemapToggle from './components/BasemapToggle';\nimport FloatWindow from './components/FloatWindow';\n\nclass App extends Component {\n  state = {\n    geo: {},\n    basemaps: [],\n    type: '',\n    data: {\n\n    },\n    style: 'LIGHT',\n    styles: [],\n    districts: [],\n    subdistricts: [],\n    neighbors: [],\n    district: '',\n    subdistrict: '',\n    neighbor: '',\n    activeBasemaps: [],\n    sidebar: false\n  }\n\n  componentDidMount() {\n    let { geo, styles, style } = this.state;\n    // eslint-disable-next-line no-undef\n    geo = new GeoMan('http://10.71.71.71', 8080, {\n      container: 'App',\n      center: [\n        124.842624,\n        1.4794296\n      ],\n      zoom: 15\n    },\n      GeoMan.Styles[style]\n    )\n    styles = Object.keys(GeoMan.Styles);\n    this.setState({ geo, styles }, this.getBasemaps);\n    geo.setRegionLabelEvent('click', 'district', ev => {\n      this.setState({ type: 'kec', data: ev.properties })\n    })\n    geo.setRegionLabelEvent('click', 'subdistrict', ev => {\n      this.setState({ type: 'kel', data: ev.properties })\n    })\n    geo.setRegionLabelEvent('click', 'neighbor', ev => {\n      this.setState({ type: 'rw', data: ev.properties })\n    })\n    geo.map.on('zoom', e => {\n      const zoom = e.target.getZoom();\n      this.showBaseMap(zoom)\n    })\n    this.ping();\n  }\n\n  showBaseMap = zoom => {\n    const { basemaps, activeBasemaps } = this.state;\n    activeBasemaps.length = 0;\n    basemaps.map(b => {\n      b.setOpacity(0.5)\n      if (b.name === 'Bangunan' && zoom > 15) {\n        b.show()\n        if (activeBasemaps.findIndex(x => x === 'Bangunan') === -1) activeBasemaps.push('Bangunan');\n        this.setState({ activeBasemaps });\n      } else if (b.name === 'Sungai' && zoom > 14) {\n        b.show()\n        if (activeBasemaps.findIndex(x => x === 'Sungai') === -1) activeBasemaps.push('Sungai');\n        this.setState({ activeBasemaps });\n      } else {\n        if (zoom < 16 && zoom > 15) {\n          const a = activeBasemaps.filter(b => b !== 'Bangunan');\n          this.setState({ activeBasemaps: a });\n        }\n\n        if (zoom < 14.25 && zoom > 14) {\n          const a = activeBasemaps.filter(b => b !== 'Jalan');\n          this.setState({ activeBasemaps: a });\n        }\n\n        if (zoom < 14 && zoom > 13) {\n          const a = activeBasemaps.filter(b => b !== 'Sungai');\n          this.setState({ activeBasemaps: a });\n        }\n\n        b.hide()\n      }\n\n\n      if (b.name === 'Jalan' && zoom > 14.25) {\n        b.show()\n        if (activeBasemaps.findIndex(x => x === 'Jalan') === -1) activeBasemaps.push('Jalan');\n        this.setState({ activeBasemaps });\n        // } else if (zoom > 13 && zoom <= 15 && activeBasemaps.findIndex(x => x === 'Bangunan') > -1) {\n        //   b.hide()\n        //   console.log('bangunan')\n        //   const a = activeBasemaps.filter(b => b !== 'Bangunan');\n        //   this.setState({ activeBasemaps : a });\n        // } else if (zoom > 14 && zoom <= 14.25 && activeBasemaps.findIndex(x => x === 'Sungai') > -1) {\n        //   b.hide()\n        //   console.log('sungai')\n        //   const a = activeBasemaps.filter(b => b !== 'Sungai');\n        //   this.setState({ activeBasemaps : a });\n        // } else if (zoom > 13 && zoom <= 14 && activeBasemaps.findIndex(x => x === 'Jalan') > -1) {\n        //   b.hide()\n        //   console.log('Jalan')\n        //   const a = activeBasemaps.filter(b => b !== 'Jalan');\n        //   this.setState({ activeBasemaps : a });\n      }\n    })\n  }\n\n  getDistricts = async () => {\n    const { geo } = this.state;\n    const districts = await geo.getDistricts();\n    this.setState({ districts });\n  }\n\n  getSubdistricts = async d => {\n    const subdistricts = await d.getSubdistricts();\n    this.setState({ subdistricts })\n  }\n\n  getNeighbors = async n => {\n    const neighbors = await n.getNeighbors();\n    this.setState({ neighbors })\n  }\n\n  ping = () => {\n    axios.get('http://10.71.71.24:8080/api/index.php/citizens/ping').then(resp => {\n      console.log(resp);\n    })\n  }\n\n  getBasemaps = async () => {\n    const { geo } = this.state;\n    const z = geo.map.getZoom()\n    this.showBaseMap(z)\n    const basemaps = await geo.getBasemaps();\n    this.setState({ basemaps, activeBasemaps: ['Jalan', 'Sungai'] })\n    basemaps.map(b => {\n      if (b.name === 'Jalan' || b.name === 'Sungai') {\n        b.show()\n      }\n      b.setOpacity(0.5)\n    })\n    this.getDistricts();\n  }\n\n  click = (e, bmap) => {\n    if (e.target.checked) {\n      bmap.show();\n    } else {\n      bmap.hide();\n    }\n    bmap.color = 'red'\n  }\n\n  clearData = () => {\n    this.setState({ type: '', data: {} });\n  }\n\n  render() {\n    document.title = \"Manado Map\"\n    const { district, neighbor, subdistrict, basemaps, activeBasemaps } = this.state;\n    return (\n      <div className=\"App\">\n        <BasemapToggle updateBasemaps={activeBasemaps => this.setState({ activeBasemaps })} activeBasemaps={activeBasemaps} basemaps={basemaps} />\n        <div className=\"logo\">\n          <img src={require('./components/logo.png')} alt=\"\" />\n        </div>\n        <div id=\"App\" style={{ position: 'absolute', top: 0, left: 0, width: '100vw', height: '100vh' }}></div>\n        {this.state.type.length > 0 && Object.keys(this.state.data).length > 0 && <FloatWindow onClick={this.clearData} data={this.state.data} type={this.state.type} />}\n        <Container fluid>\n          <Row className=\"justify-content-end text-light\">\n            {!this.state.sidebar &&\n              <Col md=\"3\" className=\"text-right p-2\">\n                <Button color=\"dark\" size=\"sm\" onClick={() => this.setState({ sidebar: true })}>Sidebar</Button>\n              </Col>\n            }\n            {this.state.sidebar && <Col md=\"3\" className=\"vh-100\" style={{ background: 'rgba(0,0,0,0.8)', backdropFilter: 'blur(10px)', overflow: 'auto', height: '100vh' }}>\n              {/* <ul className=\"text-left\">\n                {this.state.basemaps.map(bmap => (<li key={bmap.id}>\n                  <input type=\"checkbox\" onClick={(e) => this.click(e, bmap)} id=\"\" />&nbsp;\n                  {bmap.name}\n                </li>))}\n              </ul>\n              <hr /> */}\n              <div className=\"text-left my-2\">\n                <Button size=\"sm\" className=\"rounded p-1 d-block\" onClick={() => this.setState({ sidebar: false })} color=\"danger\">Tutup</Button>\n              </div>\n              <label htmlFor=\"\" className=\"control-label my-2\">Style Map</label>\n              <select id=\"\" value={this.state.style} onChange={e => {\n                this.setState({ style: e.target.value }, async () => {\n                  await this.state.geo.setStyle(GeoMan.Styles[this.state.style])\n                  const z = this.state.geo.map.getZoom();\n                  setTimeout(() => this.showBaseMap(z), 500)\n                })\n              }} className=\"form-control\">\n                {this.state.styles.map((style, i) => (\n                  <option key={i} value={style}>{style}</option>\n                ))}\n              </select>\n              <hr />\n              <Button color=\"light\" size=\"sm\" onClick={() => {\n                this.setState({ district : '' }, () => this.state.geo.clearFocuses());\n              }}>Reset</Button>\n              {this.state.subdistricts.length === 0 && this.state.districts.map(d => (<Card onClick={() => {\n                this.setState({ district: d.id })\n                d.focus()\n              }} onDoubleClick={() => this.getSubdistricts(d)}\n                className={district === d.id ? \"bg-primary text-left my-2 shadow-sm\" : \"bg-dark text-left my-2 shadow-sm\"} key={d.id}>\n                <CardBody className=\"p-2\">\n                  {d.name}\n                </CardBody>\n              </Card>))}\n              {this.state.neighbors.length === 0 &&\n                <>\n                  {this.state.subdistricts.length > 0 &&\n                    <>\n                      <div className=\"d-flex justify-content-between align-items-center\">\n                        <Button color=\"light\" size=\"sm\" onClick={() => {\n                          this.setState({ district: '' }, () => this.state.geo.clearFocuses());\n                          // this.state.subdistricts[0].district.focus()\n                          this.setState({ subdistricts: [], subdistrict: '' })\n                        }}>Kembali</Button>\n                        <p className=\"m-0\">{this.state.subdistricts[0].district.name}</p>\n                      </div>\n                      <hr />\n                      {this.state.subdistricts.map(d => (<Card onClick={() => {\n                        this.setState({ subdistrict: d.id })\n                        d.focus()\n                      }} onDoubleClick={() => this.getNeighbors(d)}\n                        className={subdistrict === d.id ? \"bg-primary text-left my-2 shadow-sm\" : \"bg-dark text-left my-2 shadow-sm\"} key={d.id}>\n                        <CardBody className=\"p-2\">\n                          {d.name}\n                        </CardBody>\n                      </Card>))}\n                    </>\n                  }\n                </>\n              }\n              {this.state.neighbors.length > 0 &&\n                <>\n                  <div className=\"d-flex justify-content-between align-items-center\">\n                    <Button color=\"light\" size=\"sm\" onClick={() => {\n                      this.state.neighbors[0].subdistrict.focus()\n                      this.setState({ neighbors: [], neighbor: '' })\n                    }}>Kembali</Button>\n                    <p className=\"small m-0\">Kel. {this.state.neighbors[0].subdistrict.name}</p>\n                  </div>\n                  <hr />\n                  {this.state.neighbors.map(d => (<Card onClick={() => {\n                    this.setState({ neighbor: d.id })\n                    d.focus()\n                  }} className={neighbor === d.id ? \"bg-primary text-left my-2 shadow-sm\" : \"bg-dark text-left my-2 shadow-sm\"} key={d.id}>\n                    <CardBody className=\"p-2\">\n                      {d.name}\n                    </CardBody>\n                  </Card>))}\n                </>\n              }\n            </Col>}\n          </Row>\n        </Container>\n        {/* {\n          this.state.type.length > 0 && Object.keys(this.state.data).length > 0 &&\n          <ModalWindow type={this.state.type} onClick={this.clearData} data={this.state.data} />\n        } */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}