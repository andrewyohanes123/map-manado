{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\r\n * Class Basemap yang menyimpan data basemap\r\n * @class Basemap\r\n */\n\nvar Basemap =\n/** @class */\nfunction () {\n  /**\r\n   * Membuat instance dari class Basemap\r\n   * @param geoman instance class GeoMan\r\n   * @param rawData data json raw dari backend\r\n   */\n  function Basemap(geoman, rawData) {\n    this.id = rawData.id;\n    this.name = rawData.name;\n    this.fields = rawData.fields;\n    this.type = rawData.type;\n    this.description = rawData.description;\n    this.color = rawData.color;\n    this.geoman = geoman;\n  }\n  /**\r\n   * Tampilkan basemap di map\r\n   */\n\n\n  Basemap.prototype.show = function (options) {\n    var sourceID = \"basemap-source-\" + this.id;\n    var layerID = \"basemap-layer-\" + this.id;\n\n    if (!this.geoman.map.getSource(sourceID)) {\n      this.geoman.map.addSource(sourceID, {\n        type: 'vector',\n        tiles: [this.geoman.fullURL + \"/api/maps/basemaps/\" + this.id + \"/shapes?x={x}&y={y}&z={z}\"]\n      });\n      this.geoman.sources.push(sourceID);\n    }\n\n    if (!this.geoman.map.getLayer(layerID)) {\n      this.geoman.map.addLayer({\n        'id': layerID,\n        'type': this.type === 'Point' ? 'circle' : this.type === 'LineString' ? 'line' : 'fill',\n        'source': sourceID,\n        'source-layer': 'basemap',\n        'paint': this.getPaintStyle(options ? options : {\n          main_size: 1,\n          border_size: 1\n        })\n      }, 'tc-basemap-layer-neighbor-label');\n      this.geoman.layers.push(layerID);\n    } else {\n      this.geoman.map.setLayoutProperty(layerID, 'visibility', 'visible');\n    }\n  };\n  /**\r\n   * Sembunyikan basemap dari map\r\n   */\n\n\n  Basemap.prototype.hide = function () {\n    var layerID = \"basemap-layer-\" + this.id;\n\n    if (this.geoman.map.getLayer(layerID)) {\n      this.geoman.map.setLayoutProperty(layerID, 'visibility', 'none');\n    }\n  };\n  /**\r\n   * Set opacity dari basemap\r\n   * @param opacity nilai opacity\r\n   */\n\n\n  Basemap.prototype.setOpacity = function (opacity) {\n    var layerID = \"basemap-layer-\" + this.id;\n\n    if (this.geoman.map.getLayer(layerID)) {\n      this.geoman.map.setPaintProperty(layerID, this.type === 'Point' ? 'circle-opacity' : this.type === 'LineString' ? 'line-opacity' : 'fill-opacity', opacity);\n    }\n  };\n  /**\r\n   * Set paint style layer\r\n   * @param options options\r\n   * @param options.main_color warna utama\r\n   * @param options.main_size ukuran utama.\r\n   * @param options.border_color warna border\r\n   * @param options.border_size ukuran border\r\n   */\n\n\n  Basemap.prototype.setStyle = function (options) {\n    var layerID = \"basemap-layer-\" + this.id;\n\n    if (this.geoman.map.getLayer(layerID)) {\n      switch (this.type) {\n        case 'Point':\n          this.geoman.map.setPaintProperty(layerID, 'circle-color', options.main_color ? options.main_color : this.color);\n          this.geoman.map.setPaintProperty(layerID, 'circle-radius', options.main_size);\n          this.geoman.map.setPaintProperty(layerID, 'circle-stroke-color', options.border_color ? options.border_color : this.color);\n          this.geoman.map.setPaintProperty(layerID, 'circle-stroke-width', options.border_size);\n          break;\n\n        case 'LineString':\n          this.geoman.map.setPaintProperty(layerID, 'line-color', options.main_color ? options.main_color : this.color);\n          this.geoman.map.setPaintProperty(layerID, 'line-width', options.main_size);\n          break;\n\n        default:\n          this.geoman.map.setPaintProperty(layerID, 'fill-color', options.main_color ? options.main_color : this.color);\n          this.geoman.map.setPaintProperty(layerID, 'fill-outline-color', options.border_color ? options.border_color : this.color);\n          break;\n      }\n    }\n  };\n  /**\r\n   * Set event ke layer\r\n   * @param ev nama event\r\n   * @param cb callback\r\n   */\n\n\n  Basemap.prototype.on = function (ev, cb) {\n    var _this = this;\n\n    var layerName = \"basemap-layer-\" + this.id;\n    this.geoman.map.on(ev, layerName, function (d) {\n      return cb(d.features ? d.features[0] : null, d);\n    });\n    this.geoman.map.on('mouseenter', layerName, function (e) {\n      _this.geoman.map.getCanvas().style.cursor = 'pointer';\n    });\n    this.geoman.map.on('mouseleave', layerName, function (e) {\n      _this.geoman.map.getCanvas().style.cursor = '';\n    });\n  };\n  /**\r\n   * Memilih object `paint` untuk style layer\r\n   * @param options options\r\n   * @param options.main_color warna utama\r\n   * @param options.main_size ukuran utama.\r\n   * @param options.border_color warna border\r\n   * @param options.border_size ukuran border\r\n   */\n\n\n  Basemap.prototype.getPaintStyle = function (options) {\n    switch (this.type) {\n      case 'Point':\n        return {\n          'circle-color': options.main_color ? options.main_color : this.color,\n          'circle-radius': options.main_size,\n          'circle-stroke-color': options.border_color ? options.border_color : this.color,\n          'circle-stroke-width': options.border_size\n        };\n        break;\n\n      case 'LineString':\n        return {\n          'line-color': options.main_color ? options.main_color : this.color,\n          'line-width': options.main_size\n        };\n        break;\n\n      default:\n        return {\n          'fill-color': options.main_color ? options.main_color : this.color,\n          'fill-outline-color': options.border_color ? options.border_color : this.color\n        };\n        break;\n    }\n  };\n\n  return Basemap;\n}();\n\nexports.default = Basemap;","map":{"version":3,"sources":["../../src/classes/Basemap.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * Class Basemap yang menyimpan data basemap\r\n * @class Basemap\r\n */\r\nvar Basemap = /** @class */ (function () {\r\n    /**\r\n     * Membuat instance dari class Basemap\r\n     * @param geoman instance class GeoMan\r\n     * @param rawData data json raw dari backend\r\n     */\r\n    function Basemap(geoman, rawData) {\r\n        this.id = rawData.id;\r\n        this.name = rawData.name;\r\n        this.fields = rawData.fields;\r\n        this.type = rawData.type;\r\n        this.description = rawData.description;\r\n        this.color = rawData.color;\r\n        this.geoman = geoman;\r\n    }\r\n    /**\r\n     * Tampilkan basemap di map\r\n     */\r\n    Basemap.prototype.show = function (options) {\r\n        var sourceID = \"basemap-source-\" + this.id;\r\n        var layerID = \"basemap-layer-\" + this.id;\r\n        if (!this.geoman.map.getSource(sourceID)) {\r\n            this.geoman.map.addSource(sourceID, {\r\n                type: 'vector',\r\n                tiles: [this.geoman.fullURL + \"/api/maps/basemaps/\" + this.id + \"/shapes?x={x}&y={y}&z={z}\"]\r\n            });\r\n            this.geoman.sources.push(sourceID);\r\n        }\r\n        if (!this.geoman.map.getLayer(layerID)) {\r\n            this.geoman.map.addLayer({\r\n                'id': layerID,\r\n                'type': this.type === 'Point' ? 'circle' : (this.type === 'LineString' ? 'line' : 'fill'),\r\n                'source': sourceID,\r\n                'source-layer': 'basemap',\r\n                'paint': this.getPaintStyle(options ? options : { main_size: 1, border_size: 1 }),\r\n            }, 'tc-basemap-layer-neighbor-label');\r\n            this.geoman.layers.push(layerID);\r\n        }\r\n        else {\r\n            this.geoman.map.setLayoutProperty(layerID, 'visibility', 'visible');\r\n        }\r\n    };\r\n    /**\r\n     * Sembunyikan basemap dari map\r\n     */\r\n    Basemap.prototype.hide = function () {\r\n        var layerID = \"basemap-layer-\" + this.id;\r\n        if (this.geoman.map.getLayer(layerID)) {\r\n            this.geoman.map.setLayoutProperty(layerID, 'visibility', 'none');\r\n        }\r\n    };\r\n    /**\r\n     * Set opacity dari basemap\r\n     * @param opacity nilai opacity\r\n     */\r\n    Basemap.prototype.setOpacity = function (opacity) {\r\n        var layerID = \"basemap-layer-\" + this.id;\r\n        if (this.geoman.map.getLayer(layerID)) {\r\n            this.geoman.map.setPaintProperty(layerID, (this.type === 'Point' ? 'circle-opacity' : (this.type === 'LineString' ? 'line-opacity' : 'fill-opacity')), opacity);\r\n        }\r\n    };\r\n    /**\r\n     * Set paint style layer\r\n     * @param options options\r\n     * @param options.main_color warna utama\r\n     * @param options.main_size ukuran utama.\r\n     * @param options.border_color warna border\r\n     * @param options.border_size ukuran border\r\n     */\r\n    Basemap.prototype.setStyle = function (options) {\r\n        var layerID = \"basemap-layer-\" + this.id;\r\n        if (this.geoman.map.getLayer(layerID)) {\r\n            switch (this.type) {\r\n                case 'Point':\r\n                    this.geoman.map.setPaintProperty(layerID, 'circle-color', options.main_color ? options.main_color : this.color);\r\n                    this.geoman.map.setPaintProperty(layerID, 'circle-radius', options.main_size);\r\n                    this.geoman.map.setPaintProperty(layerID, 'circle-stroke-color', options.border_color ? options.border_color : this.color);\r\n                    this.geoman.map.setPaintProperty(layerID, 'circle-stroke-width', options.border_size);\r\n                    break;\r\n                case 'LineString':\r\n                    this.geoman.map.setPaintProperty(layerID, 'line-color', options.main_color ? options.main_color : this.color);\r\n                    this.geoman.map.setPaintProperty(layerID, 'line-width', options.main_size);\r\n                    break;\r\n                default:\r\n                    this.geoman.map.setPaintProperty(layerID, 'fill-color', options.main_color ? options.main_color : this.color);\r\n                    this.geoman.map.setPaintProperty(layerID, 'fill-outline-color', options.border_color ? options.border_color : this.color);\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Set event ke layer\r\n     * @param ev nama event\r\n     * @param cb callback\r\n     */\r\n    Basemap.prototype.on = function (ev, cb) {\r\n        var _this = this;\r\n        var layerName = \"basemap-layer-\" + this.id;\r\n        this.geoman.map.on(ev, layerName, function (d) { return cb(d.features ? d.features[0] : null, d); });\r\n        this.geoman.map.on('mouseenter', layerName, function (e) {\r\n            _this.geoman.map.getCanvas().style.cursor = 'pointer';\r\n        });\r\n        this.geoman.map.on('mouseleave', layerName, function (e) {\r\n            _this.geoman.map.getCanvas().style.cursor = '';\r\n        });\r\n    };\r\n    /**\r\n     * Memilih object `paint` untuk style layer\r\n     * @param options options\r\n     * @param options.main_color warna utama\r\n     * @param options.main_size ukuran utama.\r\n     * @param options.border_color warna border\r\n     * @param options.border_size ukuran border\r\n     */\r\n    Basemap.prototype.getPaintStyle = function (options) {\r\n        switch (this.type) {\r\n            case 'Point':\r\n                return {\r\n                    'circle-color': options.main_color ? options.main_color : this.color,\r\n                    'circle-radius': options.main_size,\r\n                    'circle-stroke-color': options.border_color ? options.border_color : this.color,\r\n                    'circle-stroke-width': options.border_size,\r\n                };\r\n                break;\r\n            case 'LineString':\r\n                return {\r\n                    'line-color': options.main_color ? options.main_color : this.color,\r\n                    'line-width': options.main_size\r\n                };\r\n                break;\r\n            default:\r\n                return {\r\n                    'fill-color': options.main_color ? options.main_color : this.color,\r\n                    'fill-outline-color': options.border_color ? options.border_color : this.color\r\n                };\r\n                break;\r\n        }\r\n    };\r\n    return Basemap;\r\n}());\r\nexports.default = Basemap;\r\n//# sourceMappingURL=Basemap.js.map"]},"metadata":{},"sourceType":"script"}