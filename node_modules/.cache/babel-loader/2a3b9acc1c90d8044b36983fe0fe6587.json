{"ast":null,"code":"var _jsxFileName = \"/Users/andrewyohanes/Documents/map-manado/src/components/FloatWindow.js\";\nimport React, { Component } from 'react';\nimport { Card, CardBody, CardHeader } from 'reactstrap';\nimport axios from 'axios';\nimport Draggable from 'react-draggable';\nexport default class FloatWindow extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      top: 60,\n      left: 15,\n      types: {\n        'Jenis Kelamin': 'jenis_kelamin',\n        'Agama': 'agama',\n        'Pendidikan': 'pendidikan',\n        'Golongan Darah': 'golongan_darah',\n        'Pekerjaan': 'pekerjaan'\n      },\n      type: 'Jenis Kelamin'\n    };\n\n    this.onchange = ev => {\n      this.setState({\n        type: ev.target.value\n      });\n    };\n\n    this.getData = () => {\n      const _this$props = this.props,\n            type = _this$props.type,\n            data = _this$props.data;\n      const t = this.state.type;\n      const params = {\n        region: this.props.type,\n        type: t\n      };\n\n      if (type === 'kec') {\n        params.no_kec = data.no_kec;\n      } else if (type === 'kel') {\n        params.no_kec = data.no_kec;\n        params.no_kel = data.no_kel;\n      } else if (type === 'rw') {\n        params.no_kec = data.no_kec;\n        params.no_kel = data.no_kel;\n        params.no_rw = data.no_rw;\n      }\n\n      axios.get('http://10.71.71.24:8080/api/index.php/citizens/statistics', {\n        params\n      }).then(({\n        data\n      }) => {\n        let _this$state$dataset = this.state.dataset,\n            datasets = _this$state$dataset.datasets,\n            labels = _this$state$dataset.labels;\n        datasets[0].data = data.map(g => {\n          return g.TOTAL;\n        });\n        labels = data.map(g => g.GOLONGAN_DARAH);\n        this.setState({\n          data,\n          dataset: {\n            datasets,\n            labels\n          }\n        });\n      });\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          types = _this$state.types,\n          type = _this$state.type;\n    return React.createElement(\"div\", {\n      style: {\n        position: 'fixed',\n        maxWidth: 350,\n        width: 350\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Draggable, {\n      defaultPosition: {\n        x: 227,\n        y: 41\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        maxWidth: 350,\n        background: 'rgba(0,0,0,0.5)',\n        backdropFilter: 'blur(10px)',\n        color: 'white'\n      },\n      className: \"border-0 shadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(CardBody, {\n      onDrag: e => console.log(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      className: \"form-control form-control-sm\",\n      onChange: this.onchange,\n      value: type,\n      id: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, Object.keys(types).map((t, i) => React.createElement(\"option\", {\n      key: i,\n      value: t,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, t))), React.createElement(\"p\", {\n      className: \"m-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Test\")))));\n  }\n\n}","map":{"version":3,"sources":["/Users/andrewyohanes/Documents/map-manado/src/components/FloatWindow.js"],"names":["React","Component","Card","CardBody","CardHeader","axios","Draggable","FloatWindow","state","top","left","types","type","onchange","ev","setState","target","value","getData","props","data","t","params","region","no_kec","no_kel","no_rw","get","then","dataset","datasets","labels","map","g","TOTAL","GOLONGAN_DARAH","render","position","maxWidth","width","x","y","background","backdropFilter","color","e","console","log","Object","keys","i"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,UAAzB,QAA2C,YAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AAEA,eAAe,MAAMC,WAAN,SAA0BN,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAC/CO,KAD+C,GACvC;AACJC,MAAAA,GAAG,EAAE,EADD;AAEJC,MAAAA,IAAI,EAAE,EAFF;AAGJC,MAAAA,KAAK,EAAE;AACH,yBAAiB,eADd;AAEH,iBAAS,OAFN;AAGH,sBAAc,YAHX;AAIH,0BAAkB,gBAJf;AAKH,qBAAa;AALV,OAHH;AAUJC,MAAAA,IAAI,EAAE;AAVF,KADuC;;AAAA,SAc/CC,QAd+C,GAcpCC,EAAE,IAAI;AACb,WAAKC,QAAL,CAAc;AAAEH,QAAAA,IAAI,EAAGE,EAAE,CAACE,MAAH,CAAUC;AAAnB,OAAd;AACH,KAhB8C;;AAAA,SAkB/CC,OAlB+C,GAkBrC,MAAM;AAAA,0BACW,KAAKC,KADhB;AAAA,YACJP,IADI,eACJA,IADI;AAAA,YACEQ,IADF,eACEA,IADF;AAAA,YAEEC,CAFF,GAEO,KAAKb,KAFZ,CAELI,IAFK;AAGZ,YAAMU,MAAM,GAAG;AACbC,QAAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWP,IADN;AAEbA,QAAAA,IAAI,EAAES;AAFO,OAAf;;AAIA,UAAIT,IAAI,KAAK,KAAb,EAAoB;AAClBU,QAAAA,MAAM,CAACE,MAAP,GAAgBJ,IAAI,CAACI,MAArB;AACD,OAFD,MAEO,IAAIZ,IAAI,KAAK,KAAb,EAAoB;AACzBU,QAAAA,MAAM,CAACE,MAAP,GAAgBJ,IAAI,CAACI,MAArB;AACAF,QAAAA,MAAM,CAACG,MAAP,GAAgBL,IAAI,CAACK,MAArB;AACD,OAHM,MAGA,IAAIb,IAAI,KAAK,IAAb,EAAmB;AACxBU,QAAAA,MAAM,CAACE,MAAP,GAAgBJ,IAAI,CAACI,MAArB;AACAF,QAAAA,MAAM,CAACG,MAAP,GAAgBL,IAAI,CAACK,MAArB;AACAH,QAAAA,MAAM,CAACI,KAAP,GAAeN,IAAI,CAACM,KAApB;AACD;;AACDrB,MAAAA,KAAK,CAACsB,GAAN,CAAU,2DAAV,EAAuE;AACrEL,QAAAA;AADqE,OAAvE,EAEGM,IAFH,CAEQ,CAAC;AAAER,QAAAA;AAAF,OAAD,KAAc;AAAA,kCACoB,KAAKZ,KADzB,CACdqB,OADc;AAAA,YACHC,QADG,uBACHA,QADG;AAAA,YACOC,MADP,uBACOA,MADP;AAEpBD,QAAAA,QAAQ,CAAC,CAAD,CAAR,CAAYV,IAAZ,GAAmBA,IAAI,CAACY,GAAL,CAASC,CAAC,IAAI;AAC/B,iBAAOA,CAAC,CAACC,KAAT;AACD,SAFkB,CAAnB;AAGAH,QAAAA,MAAM,GAAGX,IAAI,CAACY,GAAL,CAASC,CAAC,IAAKA,CAAC,CAACE,cAAjB,CAAT;AACA,aAAKpB,QAAL,CAAc;AAAEK,UAAAA,IAAF;AAAQS,UAAAA,OAAO,EAAE;AAAEC,YAAAA,QAAF;AAAYC,YAAAA;AAAZ;AAAjB,SAAd;AACD,OATD;AAUD,KA7C4C;AAAA;;AA+C/CK,EAAAA,MAAM,GAAG;AAAA,wBACmB,KAAK5B,KADxB;AAAA,UACGG,KADH,eACGA,KADH;AAAA,UACUC,IADV,eACUA,IADV;AAEL,WACI;AAAK,MAAA,KAAK,EAAE;AAAEyB,QAAAA,QAAQ,EAAE,OAAZ;AAAqBC,QAAAA,QAAQ,EAAE,GAA/B;AAAoCC,QAAAA,KAAK,EAAE;AAA3C,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AACI,MAAA,eAAe,EAAE;AAAEC,QAAAA,CAAC,EAAE,GAAL;AAAUC,QAAAA,CAAC,EAAE;AAAb,OADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AACTH,QAAAA,QAAQ,EAAE,GADD;AAETI,QAAAA,UAAU,EAAE,iBAFH;AAGTC,QAAAA,cAAc,EAAE,YAHP;AAITC,QAAAA,KAAK,EAAE;AAJE,OAAb;AAKG,MAAA,SAAS,EAAC,iBALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMI,oBAAC,QAAD;AAAU,MAAA,MAAM,EAAEC,CAAC,IAAIC,OAAO,CAACC,GAAR,CAAYF,CAAZ,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,SAAS,EAAC,8BAAlB;AAAiD,MAAA,QAAQ,EAAE,KAAKhC,QAAhE;AAA0E,MAAA,KAAK,EAAED,IAAjF;AAAuF,MAAA,EAAE,EAAC,EAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKoC,MAAM,CAACC,IAAP,CAAYtC,KAAZ,EAAmBqB,GAAnB,CAAuB,CAACX,CAAD,EAAI6B,CAAJ,KACpB;AAAQ,MAAA,GAAG,EAAEA,CAAb;AAAgB,MAAA,KAAK,EAAE7B,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2BA,CAA3B,CADH,CADL,CADJ,EAMI;AAAG,MAAA,SAAS,EAAC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,CANJ,CAHJ,CADJ,CADJ;AAuBH;;AAxE8C","sourcesContent":["import React, { Component } from 'react'\nimport { Card, CardBody, CardHeader } from 'reactstrap'\nimport axios from 'axios'\nimport Draggable from 'react-draggable'\n\nexport default class FloatWindow extends Component {\n    state = {\n        top: 60,\n        left: 15,\n        types: {\n            'Jenis Kelamin': 'jenis_kelamin',\n            'Agama': 'agama',\n            'Pendidikan': 'pendidikan',\n            'Golongan Darah': 'golongan_darah',\n            'Pekerjaan': 'pekerjaan',\n        },\n        type: 'Jenis Kelamin'\n    }\n\n    onchange = ev => {\n        this.setState({ type : ev.target.value });\n    }\n\n    getData = () => {\n        const { type, data } = this.props;\n        const {type : t} = this.state;\n        const params = {\n          region: this.props.type,\n          type: t,\n        };\n        if (type === 'kec') {\n          params.no_kec = data.no_kec\n        } else if (type === 'kel') {\n          params.no_kec = data.no_kec\n          params.no_kel = data.no_kel\n        } else if (type === 'rw') {\n          params.no_kec = data.no_kec\n          params.no_kel = data.no_kel\n          params.no_rw = data.no_rw\n        }\n        axios.get('http://10.71.71.24:8080/api/index.php/citizens/statistics', {\n          params\n        }).then(({ data }) => {\n          let { dataset: { datasets, labels } } = this.state;\n          datasets[0].data = data.map(g => {\n            return g.TOTAL\n          })\n          labels = data.map(g => (g.GOLONGAN_DARAH))\n          this.setState({ data, dataset: { datasets, labels }, });\n        })\n      }\n\n    render() {\n        const { types, type } = this.state;\n        return (\n            <div style={{ position: 'fixed', maxWidth: 350, width: 350 }}>\n                <Draggable\n                    defaultPosition={{ x: 227, y: 41 }}\n                >\n                    <Card style={{\n                        maxWidth: 350,\n                        background: 'rgba(0,0,0,0.5)',\n                        backdropFilter: 'blur(10px)',\n                        color: 'white'\n                    }} className=\"border-0 shadow\">\n                        <CardBody onDrag={e => console.log(e)}>\n                            <select className=\"form-control form-control-sm\" onChange={this.onchange} value={type} id=\"\">\n                                {Object.keys(types).map((t, i) => (\n                                    <option key={i} value={t}>{t}</option>\n                                ))}\n                            </select>\n                            <p className=\"m-0\">Test</p>\n                        </CardBody>\n                    </Card>\n                </Draggable>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}