{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\r\n * Class Basemap yang menyimpan data basemap\r\n * @class Basemap\r\n */\n\nvar Basemap =\n/** @class */\nfunction () {\n  /**\r\n   * Membuat instance dari class Basemap\r\n   * @param geoman instance class GeoMan\r\n   * @param rawData data json raw dari backend\r\n   */\n  function Basemap(geoman, rawData) {\n    this.id = rawData.id;\n    this.name = rawData.name;\n    this.fields = rawData.fields;\n    this.type = rawData.type;\n    this.description = rawData.description;\n    this.color = rawData.color;\n    this.geoman = geoman;\n  }\n  /**\r\n   * Tampilkan basemap di map\r\n   */\n\n\n  Basemap.prototype.show = function (options) {\n    var sourceID = \"basemap-source-\" + this.id;\n    var layerID = \"basemap-layer-\" + this.id;\n\n    if (!this.geoman.map.getSource(sourceID)) {\n      this.geoman.map.addSource(sourceID, {\n        type: 'vector',\n        tiles: [this.geoman.fullURL + \"/api/maps/basemaps/\" + this.id + \"/shapes?x={x}&y={y}&z={z}\"]\n      });\n      this.geoman.sources.push(sourceID);\n    }\n\n    if (!this.geoman.map.getLayer(layerID)) {\n      this.geoman.map.addLayer({\n        'id': layerID,\n        'type': this.type === 'Point' ? 'circle' : this.type === 'LineString' ? 'line' : 'fill',\n        'source': sourceID,\n        'source-layer': 'basemap',\n        'paint': this.getPaintStyle(options ? options : {\n          main_size: 1,\n          border_size: 1\n        })\n      }, 'tc-basemap-layer-neighbor-label');\n      this.geoman.layers.push(layerID);\n    } else {\n      this.geoman.map.setLayoutProperty(layerID, 'visibility', 'visible');\n    }\n  };\n  /**\r\n   * Sembunyikan basemap dari map\r\n   */\n\n\n  Basemap.prototype.hide = function () {\n    var layerID = \"basemap-layer-\" + this.id;\n\n    if (this.geoman.map.getLayer(layerID)) {\n      this.geoman.map.setLayoutProperty(layerID, 'visibility', 'none');\n    }\n  };\n  /**\r\n   * Set opacity dari basemap\r\n   * @param opacity nilai opacity\r\n   */\n\n\n  Basemap.prototype.setOpacity = function (opacity) {\n    var layerID = \"basemap-layer-\" + this.id;\n\n    if (this.geoman.map.getLayer(layerID)) {\n      this.geoman.map.setPaintProperty(layerID, this.type === 'Point' ? 'circle-opacity' : this.type === 'LineString' ? 'line-opacity' : 'fill-opacity', opacity);\n    }\n  };\n  /**\r\n   * Set paint style layer\r\n   * @param options options\r\n   * @param options.main_color warna utama\r\n   * @param options.main_size ukuran utama.\r\n   * @param options.border_color warna border\r\n   * @param options.border_size ukuran border\r\n   */\n\n\n  Basemap.prototype.setStyle = function (options) {\n    var layerID = \"basemap-layer-\" + this.id;\n\n    if (this.geoman.map.getLayer(layerID)) {\n      switch (this.type) {\n        case 'Point':\n          this.geoman.map.setPaintProperty(layerID, 'circle-color', options.main_color ? options.main_color : this.color);\n          this.geoman.map.setPaintProperty(layerID, 'circle-radius', options.main_size);\n          this.geoman.map.setPaintProperty(layerID, 'circle-stroke-color', options.border_color ? options.border_color : this.color);\n          this.geoman.map.setPaintProperty(layerID, 'circle-stroke-width', options.border_size);\n          break;\n\n        case 'LineString':\n          this.geoman.map.setPaintProperty(layerID, 'line-color', options.main_color ? options.main_color : this.color);\n          this.geoman.map.setPaintProperty(layerID, 'line-width', options.main_size);\n          break;\n\n        default:\n          this.geoman.map.setPaintProperty(layerID, 'fill-color', options.main_color ? options.main_color : this.color);\n          this.geoman.map.setPaintProperty(layerID, 'fill-outline-color', options.border_color ? options.border_color : this.color);\n          break;\n      }\n    }\n  };\n  /**\r\n   * Set event ke layer\r\n   * @param ev nama event\r\n   * @param cb callback\r\n   */\n\n\n  Basemap.prototype.on = function (ev, cb) {\n    var _this = this;\n\n    var layerName = \"basemap-layer-\" + this.id;\n    this.geoman.map.on(ev, layerName, function (d) {\n      return cb(d.features ? d.features[0] : null, d);\n    });\n    this.geoman.map.on('mouseenter', layerName, function (e) {\n      _this.geoman.map.getCanvas().style.cursor = 'pointer';\n    });\n    this.geoman.map.on('mouseleave', layerName, function (e) {\n      _this.geoman.map.getCanvas().style.cursor = '';\n    });\n  };\n  /**\r\n   * Memilih object `paint` untuk style layer\r\n   * @param options options\r\n   * @param options.main_color warna utama\r\n   * @param options.main_size ukuran utama.\r\n   * @param options.border_color warna border\r\n   * @param options.border_size ukuran border\r\n   */\n\n\n  Basemap.prototype.getPaintStyle = function (options) {\n    switch (this.type) {\n      case 'Point':\n        return {\n          'circle-color': options.main_color ? options.main_color : this.color,\n          'circle-radius': options.main_size,\n          'circle-stroke-color': options.border_color ? options.border_color : this.color,\n          'circle-stroke-width': options.border_size\n        };\n        break;\n\n      case 'LineString':\n        return {\n          'line-color': options.main_color ? options.main_color : this.color,\n          'line-width': options.main_size\n        };\n        break;\n\n      default:\n        return {\n          'fill-color': options.main_color ? options.main_color : this.color,\n          'fill-outline-color': options.border_color ? options.border_color : this.color\n        };\n        break;\n    }\n  };\n\n  return Basemap;\n}();\n\nexports.default = Basemap;","map":null,"metadata":{},"sourceType":"script"}