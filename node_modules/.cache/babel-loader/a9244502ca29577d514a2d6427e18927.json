{"ast":null,"code":"var _jsxFileName = \"/Users/andrewyohanes/Documents/map-manado/src/components/FloatWindow.js\";\nimport React, { Component } from 'react';\nimport { Card, CardBody, CardHeader } from 'reactstrap';\nimport { Doughnut } from 'react-chartjs-2';\nimport axios from 'axios';\nimport Draggable from 'react-draggable';\nexport default class FloatWindow extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      top: 60,\n      left: 15,\n      types: {\n        'Jenis Kelamin': 'jenis_kelamin',\n        'Agama': 'agama',\n        'Pendidikan': 'pendidikan',\n        'Golongan Darah': 'golongan_darah',\n        'Pekerjaan': 'pekerjaan'\n      },\n      type: 'Jenis Kelamin',\n      data: [{\n        a: 0,\n        b: 0\n      }],\n      dataset: {\n        labels: [],\n        datasets: [{\n          backgroundColor: ['rgba(54, 162, 235, 0.2)', 'rgba(255, 99, 132, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)', 'rgba(34, 47, 62,0.2)', 'rgba(16, 172, 132,0.2)', 'rgba(95, 39, 205,0.2)', 'rgba(1, 163, 164,0.2)', 'rgba(255, 159, 67,0.2)', 'rgba(29, 209, 161,0.2)', 'rgba(84, 160, 255,0.2)'],\n          borderColor: ['rgba(54, 162, 235, 0.7)', 'rgba(255, 99, 132, 0.7)', 'rgba(255, 206, 86, 0.7)', 'rgba(75, 192, 192, 0.7)', 'rgba(153, 102, 255, 0.7)', 'rgba(255, 159, 64, 0.7)', 'rgba(34, 47, 62,0.7)', 'rgba(16, 172, 132,0.7)', 'rgba(95, 39, 205,0.7)', 'rgba(1, 163, 164,0.7)', 'rgba(255, 159, 67,0.7)', 'rgba(29, 209, 161,0.7)', 'rgba(84, 160, 255,0.7)'],\n          borderWidth: 1,\n          data: [0, 0]\n        }]\n      }\n    };\n\n    this.componentDidMount = () => {\n      this.getData();\n    };\n\n    this.onchange = ev => {\n      this.setState({\n        type: ev.target.value\n      });\n    };\n\n    this.getData = () => {\n      const _this$props = this.props,\n            type = _this$props.type,\n            data = _this$props.data;\n      const _this$state = this.state,\n            t = _this$state.type,\n            types = _this$state.types;\n      const params = {\n        region: this.props.type,\n        type: types[t]\n      };\n\n      if (type === 'kec') {\n        params.no_kec = data.no_kec;\n      } else if (type === 'kel') {\n        params.no_kec = data.no_kec;\n        params.no_kel = data.no_kel;\n      } else if (type === 'rw') {\n        params.no_kec = data.no_kec;\n        params.no_kel = data.no_kel;\n        params.no_rw = data.no_rw;\n      }\n\n      axios.get('http://10.71.71.24:8080/api/index.php/citizens/statistics', {\n        params\n      }).then(({\n        data\n      }) => {\n        let _this$state$dataset = this.state.dataset,\n            datasets = _this$state$dataset.datasets,\n            labels = _this$state$dataset.labels;\n        datasets[0].data = data.map(g => {\n          return g.TOTAL;\n        });\n        labels = data.map(g => g.GOLONGAN_DARAH);\n        this.setState({\n          data,\n          dataset: {\n            datasets,\n            labels\n          }\n        });\n      });\n    };\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          types = _this$state2.types,\n          type = _this$state2.type,\n          dataset = _this$state2.dataset;\n    return React.createElement(\"div\", {\n      style: {\n        position: 'fixed',\n        maxWidth: 350,\n        width: 350\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Draggable, {\n      defaultPosition: {\n        x: 227,\n        y: 41\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        maxWidth: 350,\n        background: 'rgba(0,0,0,0.5)',\n        backdropFilter: 'blur(10px)',\n        color: 'white'\n      },\n      className: \"border-0 shadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(CardBody, {\n      className: \"p-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      className: \"form-control form-control-sm\",\n      onChange: this.onchange,\n      value: type,\n      id: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, Object.keys(types).map((t, i) => React.createElement(\"option\", {\n      key: i,\n      value: t,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, t))), React.createElement(Doughnut, {\n      data: dataset,\n      width: \"100%\",\n      height: \"100%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    })))));\n  }\n\n}","map":{"version":3,"sources":["/Users/andrewyohanes/Documents/map-manado/src/components/FloatWindow.js"],"names":["React","Component","Card","CardBody","CardHeader","Doughnut","axios","Draggable","FloatWindow","state","top","left","types","type","data","a","b","dataset","labels","datasets","backgroundColor","borderColor","borderWidth","componentDidMount","getData","onchange","ev","setState","target","value","props","t","params","region","no_kec","no_kel","no_rw","get","then","map","g","TOTAL","GOLONGAN_DARAH","render","position","maxWidth","width","x","y","background","backdropFilter","color","Object","keys","i"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Card, CardBody, CardHeader } from 'reactstrap'\nimport {Doughnut} from 'react-chartjs-2'\nimport axios from 'axios'\nimport Draggable from 'react-draggable'\n\nexport default class FloatWindow extends Component {\n    state = {\n        top: 60,\n        left: 15,\n        types: {\n            'Jenis Kelamin': 'jenis_kelamin',\n            'Agama': 'agama',\n            'Pendidikan': 'pendidikan',\n            'Golongan Darah': 'golongan_darah',\n            'Pekerjaan': 'pekerjaan',\n        },\n        type: 'Jenis Kelamin',\n        data: [{a:0,b:0}],\n    dataset: {\n      labels: [],\n      datasets: [{\n        backgroundColor: [\n          'rgba(54, 162, 235, 0.2)',\n          'rgba(255, 99, 132, 0.2)',\n          'rgba(255, 206, 86, 0.2)',\n          'rgba(75, 192, 192, 0.2)',\n          'rgba(153, 102, 255, 0.2)',\n          'rgba(255, 159, 64, 0.2)',\n          'rgba(34, 47, 62,0.2)',\n          'rgba(16, 172, 132,0.2)',\n          'rgba(95, 39, 205,0.2)',\n          'rgba(1, 163, 164,0.2)',\n          'rgba(255, 159, 67,0.2)',\n          'rgba(29, 209, 161,0.2)',\n          'rgba(84, 160, 255,0.2)'\n        ],\n        borderColor: [\n          'rgba(54, 162, 235, 0.7)',\n          'rgba(255, 99, 132, 0.7)',\n          'rgba(255, 206, 86, 0.7)',\n          'rgba(75, 192, 192, 0.7)',\n          'rgba(153, 102, 255, 0.7)',\n          'rgba(255, 159, 64, 0.7)',\n          'rgba(34, 47, 62,0.7)',\n          'rgba(16, 172, 132,0.7)',\n          'rgba(95, 39, 205,0.7)',\n          'rgba(1, 163, 164,0.7)',\n          'rgba(255, 159, 67,0.7)',\n          'rgba(29, 209, 161,0.7)',\n          'rgba(84, 160, 255,0.7)'\n        ],\n        borderWidth: 1,\n        data: [0, 0]\n      }]\n    }\n    }\n\n    componentDidMount = () => {\n        this.getData()\n    }\n\n    onchange = ev => {\n        this.setState({ type : ev.target.value });\n    }\n\n    getData = () => {\n        const { type, data } = this.props;\n        const {type : t, types} = this.state;\n        const params = {\n          region: this.props.type,\n          type: types[t],\n        };\n        if (type === 'kec') {\n          params.no_kec = data.no_kec\n        } else if (type === 'kel') {\n          params.no_kec = data.no_kec\n          params.no_kel = data.no_kel\n        } else if (type === 'rw') {\n          params.no_kec = data.no_kec\n          params.no_kel = data.no_kel\n          params.no_rw = data.no_rw\n        }\n        axios.get('http://10.71.71.24:8080/api/index.php/citizens/statistics', {\n          params\n        }).then(({ data }) => {\n          let { dataset: { datasets, labels } } = this.state;\n          datasets[0].data = data.map(g => {\n            return g.TOTAL\n          })\n          labels = data.map(g => (g.GOLONGAN_DARAH))\n          this.setState({ data, dataset: { datasets, labels }, });\n        })\n      }\n\n    render() {\n        const { types, type, dataset } = this.state;\n        return (\n            <div style={{ position: 'fixed', maxWidth: 350, width: 350 }}>\n                <Draggable\n                    defaultPosition={{ x: 227, y: 41 }}\n                >\n                    <Card style={{\n                        maxWidth: 350,\n                        background: 'rgba(0,0,0,0.5)',\n                        backdropFilter: 'blur(10px)',\n                        color: 'white'\n                    }} className=\"border-0 shadow\">\n                        <CardBody className=\"p-2\">\n                            <select className=\"form-control form-control-sm\" onChange={this.onchange} value={type} id=\"\">\n                                {Object.keys(types).map((t, i) => (\n                                    <option key={i} value={t}>{t}</option>\n                                ))}\n                            </select>\n                            <Doughnut data={dataset} width=\"100%\" height=\"100%\" />\n                        </CardBody>\n                    </Card>\n                </Draggable>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}