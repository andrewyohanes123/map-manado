{"ast":null,"code":"var _jsxFileName = \"/Users/andrewyohanes/Documents/map-manado/src/components/FloatWindow.js\";\nimport React, { Component } from 'react';\nimport { Card, CardBody, Button } from 'reactstrap';\nimport { Doughnut, HorizontalBar } from 'react-chartjs-2';\nimport axios from 'axios';\nimport Draggable from 'react-draggable';\nexport default class FloatWindow extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      top: 60,\n      left: 15,\n      types: {\n        'Jenis Kelamin': 'jenis_kelamin',\n        'Agama': 'agama',\n        'Pendidikan': 'pendidikan',\n        'Golongan Darah': 'golongan_darah',\n        'Pekerjaan': 'pekerjaan'\n      },\n      type: 'Jenis Kelamin',\n      data: [{\n        a: 0,\n        b: 0\n      }],\n      dataset: {\n        labels: [],\n        datasets: [{\n          backgroundColor: ['rgba(54, 162, 235, 0.2)', 'rgba(255, 99, 132, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)', 'rgba(34, 47, 62,0.2)', 'rgba(16, 172, 132,0.2)', 'rgba(95, 39, 205,0.2)', 'rgba(1, 163, 164,0.2)', 'rgba(255, 159, 67,0.2)', 'rgba(29, 209, 161,0.2)', 'rgba(84, 160, 255,0.2)'],\n          borderColor: ['rgba(54, 162, 235, 0.7)', 'rgba(255, 99, 132, 0.7)', 'rgba(255, 206, 86, 0.7)', 'rgba(75, 192, 192, 0.7)', 'rgba(153, 102, 255, 0.7)', 'rgba(255, 159, 64, 0.7)', 'rgba(34, 47, 62,0.7)', 'rgba(16, 172, 132,0.7)', 'rgba(95, 39, 205,0.7)', 'rgba(1, 163, 164,0.7)', 'rgba(255, 159, 67,0.7)', 'rgba(29, 209, 161,0.7)', 'rgba(84, 160, 255,0.7)'],\n          borderWidth: 1,\n          data: [0, 0]\n        }]\n      }\n    };\n\n    this.componentDidMount = () => {\n      this.getData();\n    };\n\n    this.onchange = ev => {\n      this.setState({\n        type: ev.target.value\n      }, this.getData);\n    };\n\n    this.getData = () => {\n      const _this$props = this.props,\n            type = _this$props.type,\n            data = _this$props.data;\n      const _this$state = this.state,\n            t = _this$state.type,\n            types = _this$state.types;\n      const params = {\n        region: this.props.type,\n        type: types[t]\n      };\n\n      if (type === 'kec') {\n        params.no_kec = data.no_kec;\n      } else if (type === 'kel') {\n        params.no_kec = data.no_kec;\n        params.no_kel = data.no_kel;\n      } else if (type === 'rw') {\n        params.no_kec = data.no_kec;\n        params.no_kel = data.no_kel;\n        params.no_rw = data.no_rw;\n      }\n\n      axios.get('http://10.71.71.24:8080/api/index.php/citizens/statistics', {\n        params\n      }).then(({\n        data\n      }) => {\n        let _this$state$dataset = this.state.dataset,\n            datasets = _this$state$dataset.datasets,\n            labels = _this$state$dataset.labels;\n\n        if (typeof datasets[0].data !== 'undefined') {\n          if (t === 'Pekerjaan') {\n            datasets[0].backgroundColor = 'rgba(54, 162, 235, 0.2)';\n            datasets[0].borderColor = 'rgba(54, 162, 235, 0.7)';\n          } else {\n            datasets[0].backgroundColor = ['rgba(54, 162, 235, 0.2)', 'rgba(255, 99, 132, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)', 'rgba(34, 47, 62,0.2)', 'rgba(16, 172, 132,0.2)', 'rgba(95, 39, 205,0.2)', 'rgba(1, 163, 164,0.2)', 'rgba(255, 159, 67,0.2)', 'rgba(29, 209, 161,0.2)', 'rgba(84, 160, 255,0.2)'];\n            datasets[0].borderColor = ['rgba(54, 162, 235, 0.7)', 'rgba(255, 99, 132, 0.7)', 'rgba(255, 206, 86, 0.7)', 'rgba(75, 192, 192, 0.7)', 'rgba(153, 102, 255, 0.7)', 'rgba(255, 159, 64, 0.7)', 'rgba(34, 47, 62,0.7)', 'rgba(16, 172, 132,0.7)', 'rgba(95, 39, 205,0.7)', 'rgba(1, 163, 164,0.7)', 'rgba(255, 159, 67,0.7)', 'rgba(29, 209, 161,0.7)', 'rgba(84, 160, 255,0.7)'];\n          }\n\n          datasets[0].data = data.map(g => {\n            return g.TOTAL;\n          });\n          labels = data.map(g => {\n            console.log(g[types[t]]);\n            return g[types[t].toUpperCase()];\n          });\n          this.setState({\n            data,\n            dataset: {\n              datasets,\n              labels\n            }\n          });\n        }\n      });\n    };\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          types = _this$state2.types,\n          type = _this$state2.type,\n          dataset = _this$state2.dataset;\n    const _this$props2 = this.props,\n          data = _this$props2.data,\n          t = _this$props2.type;\n    return React.createElement(\"div\", {\n      style: {\n        position: 'fixed',\n        width: type !== 'Pekerjaan' ? 350 : 700\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(Draggable, {\n      defaultPosition: {\n        x: 227,\n        y: 41\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        background: 'rgba(255,255,255,0.5)',\n        backdropFilter: 'blur(10px)'\n      },\n      className: \"border-0 shadow text-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(CardBody, {\n      className: \"p-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"d-flex justify-content-between align-items-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"sm\",\n      className: \"d-inline-block\",\n      color: \"danger\",\n      onClick: () => this.props.onClick(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Tutup\"), React.createElement(\"p\", {\n      className: \"m-0 text-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, t === 'kec' ? \"Kecamatan \".concat(data.name) : t === 'kel' ? \"Kecamatan \".concat(data.district, \" - Kelurahan \").concat(data.name) : t === 'rw' ? \"Kecamatan \".concat(data.district, \" - Kelurahan \").concat(data.subdistrict, \" - Lingkungan \").concat(data.name) : '')), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      className: \"form-control form-control-sm\",\n      onChange: this.onchange,\n      value: type,\n      id: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, Object.keys(types).map((t, i) => React.createElement(\"option\", {\n      key: i,\n      value: t,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, t))), type !== 'Pekerjaan' && React.createElement(Doughnut, {\n      data: dataset,\n      width: \"100%\",\n      height: \"100%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }), type === 'Pekerjaan' && React.createElement(HorizontalBar, {\n      options: {\n        legend: {\n          display: false\n        }\n      },\n      data: dataset,\n      width: \"100%\",\n      height: \"100%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }), \"Total data : \", typeof data !== 'undefined' && data.map(d => d.TOTAL).reduce((a, b) => parseInt(a) + parseInt(b), 0)))));\n  }\n\n}","map":{"version":3,"sources":["/Users/andrewyohanes/Documents/map-manado/src/components/FloatWindow.js"],"names":["React","Component","Card","CardBody","Button","Doughnut","HorizontalBar","axios","Draggable","FloatWindow","state","top","left","types","type","data","a","b","dataset","labels","datasets","backgroundColor","borderColor","borderWidth","componentDidMount","getData","onchange","ev","setState","target","value","props","t","params","region","no_kec","no_kel","no_rw","get","then","map","g","TOTAL","console","log","toUpperCase","render","position","width","x","y","background","backdropFilter","onClick","name","district","subdistrict","Object","keys","i","legend","display","d","reduce","parseInt"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Card, CardBody, Button } from 'reactstrap'\nimport { Doughnut, HorizontalBar } from 'react-chartjs-2'\nimport axios from 'axios'\nimport Draggable from 'react-draggable'\n\nexport default class FloatWindow extends Component {\n    state = {\n        top: 60,\n        left: 15,\n        types: {\n            'Jenis Kelamin': 'jenis_kelamin',\n            'Agama': 'agama',\n            'Pendidikan': 'pendidikan',\n            'Golongan Darah': 'golongan_darah',\n            'Pekerjaan': 'pekerjaan',\n        },\n        type: 'Jenis Kelamin',\n        data: [{ a: 0, b: 0 }],\n        dataset: {\n            labels: [],\n            datasets: [{\n                backgroundColor: [\n                    'rgba(54, 162, 235, 0.2)',\n                    'rgba(255, 99, 132, 0.2)',\n                    'rgba(255, 206, 86, 0.2)',\n                    'rgba(75, 192, 192, 0.2)',\n                    'rgba(153, 102, 255, 0.2)',\n                    'rgba(255, 159, 64, 0.2)',\n                    'rgba(34, 47, 62,0.2)',\n                    'rgba(16, 172, 132,0.2)',\n                    'rgba(95, 39, 205,0.2)',\n                    'rgba(1, 163, 164,0.2)',\n                    'rgba(255, 159, 67,0.2)',\n                    'rgba(29, 209, 161,0.2)',\n                    'rgba(84, 160, 255,0.2)'\n                ],\n                borderColor: [\n                    'rgba(54, 162, 235, 0.7)',\n                    'rgba(255, 99, 132, 0.7)',\n                    'rgba(255, 206, 86, 0.7)',\n                    'rgba(75, 192, 192, 0.7)',\n                    'rgba(153, 102, 255, 0.7)',\n                    'rgba(255, 159, 64, 0.7)',\n                    'rgba(34, 47, 62,0.7)',\n                    'rgba(16, 172, 132,0.7)',\n                    'rgba(95, 39, 205,0.7)',\n                    'rgba(1, 163, 164,0.7)',\n                    'rgba(255, 159, 67,0.7)',\n                    'rgba(29, 209, 161,0.7)',\n                    'rgba(84, 160, 255,0.7)'\n                ],\n                borderWidth: 1,\n                data: [0, 0]\n            }]\n        }\n    }\n\n    componentDidMount = () => {\n        this.getData()\n    }\n\n    onchange = ev => {\n        this.setState({ type: ev.target.value }, this.getData);\n    }\n\n    getData = () => {\n        const { type, data } = this.props;\n        const { type: t, types } = this.state;\n        const params = {\n            region: this.props.type,\n            type: types[t],\n        };\n\n\n        if (type === 'kec') {\n            params.no_kec = data.no_kec\n        } else if (type === 'kel') {\n            params.no_kec = data.no_kec\n            params.no_kel = data.no_kel\n        } else if (type === 'rw') {\n            params.no_kec = data.no_kec\n            params.no_kel = data.no_kel\n            params.no_rw = data.no_rw\n        }\n        axios.get('http://10.71.71.24:8080/api/index.php/citizens/statistics', {\n            params\n        }).then(({ data }) => {\n            let { dataset: { datasets, labels } } = this.state;\n            if (typeof datasets[0].data !== 'undefined') {\n                if (t === 'Pekerjaan') {\n                    datasets[0].backgroundColor = 'rgba(54, 162, 235, 0.2)'\n                    datasets[0].borderColor = 'rgba(54, 162, 235, 0.7)'\n                } else {\n                    datasets[0].backgroundColor = [\n                        'rgba(54, 162, 235, 0.2)',\n                        'rgba(255, 99, 132, 0.2)',\n                        'rgba(255, 206, 86, 0.2)',\n                        'rgba(75, 192, 192, 0.2)',\n                        'rgba(153, 102, 255, 0.2)',\n                        'rgba(255, 159, 64, 0.2)',\n                        'rgba(34, 47, 62,0.2)',\n                        'rgba(16, 172, 132,0.2)',\n                        'rgba(95, 39, 205,0.2)',\n                        'rgba(1, 163, 164,0.2)',\n                        'rgba(255, 159, 67,0.2)',\n                        'rgba(29, 209, 161,0.2)',\n                        'rgba(84, 160, 255,0.2)'\n                    ]\n                    datasets[0].borderColor = [\n                        'rgba(54, 162, 235, 0.7)',\n                        'rgba(255, 99, 132, 0.7)',\n                        'rgba(255, 206, 86, 0.7)',\n                        'rgba(75, 192, 192, 0.7)',\n                        'rgba(153, 102, 255, 0.7)',\n                        'rgba(255, 159, 64, 0.7)',\n                        'rgba(34, 47, 62,0.7)',\n                        'rgba(16, 172, 132,0.7)',\n                        'rgba(95, 39, 205,0.7)',\n                        'rgba(1, 163, 164,0.7)',\n                        'rgba(255, 159, 67,0.7)',\n                        'rgba(29, 209, 161,0.7)',\n                        'rgba(84, 160, 255,0.7)'\n                    ]\n                }\n\n                datasets[0].data = data.map(g => {\n                    return g.TOTAL\n                })\n                labels = data.map(g => {\n                    console.log(g[types[t]])\n                    return (g[types[t].toUpperCase()])\n                })\n                this.setState({ data, dataset: { datasets, labels }, });\n            }\n        })\n    }\n\n    render() {\n        const { types, type, dataset } = this.state;\n        const {data, type : t} = this.props;\n        return (\n            <div style={{ position: 'fixed', width: type !== 'Pekerjaan' ? 350 : 700 }}>\n                <Draggable\n                    defaultPosition={{ x: 227, y: 41 }}\n                >\n                    <Card style={{\n                        background: 'rgba(255,255,255,0.5)',\n                        backdropFilter: 'blur(10px)',\n                    }} className=\"border-0 shadow text-left\">\n                        <CardBody className=\"p-2\">\n                            <div className=\"d-flex justify-content-between align-items-center\">\n                                <Button size=\"sm\" className=\"d-inline-block\" color=\"danger\" onClick={() => this.props.onClick()}>Tutup</Button>\n                                <p className=\"m-0 text-right\">{t === 'kec' ? `Kecamatan ${data.name}`\n                                    :\n                                    t === 'kel' ? `Kecamatan ${data.district} - Kelurahan ${data.name}`\n                                        :\n                                        t === 'rw' ? `Kecamatan ${data.district} - Kelurahan ${data.subdistrict} - Lingkungan ${data.name}`\n                                            :\n                                            ''\n                                }</p>\n                            </div>\n                            <hr />\n                            <select className=\"form-control form-control-sm\" onChange={this.onchange} value={type} id=\"\">\n                                {Object.keys(types).map((t, i) => (\n                                    <option key={i} value={t}>{t}</option>\n                                ))}\n                            </select>\n                            {type !== 'Pekerjaan' && <Doughnut data={dataset} width=\"100%\" height=\"100%\" />}\n                            {type === 'Pekerjaan' && <HorizontalBar options={{\n                                legend: { display: false }\n                            }} data={dataset} width=\"100%\" height=\"100%\" />}\n                            <hr/>\n                            Total data : {typeof data !== 'undefined' && data.map(d => d.TOTAL).reduce((a, b) => (parseInt(a) + parseInt(b)), 0)}\n                        </CardBody>\n                    </Card>\n                </Draggable>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}