{"ast":null,"code":"var _jsxFileName = \"/Users/andrewyohanes/Documents/map-manado/src/components/Gender.js\";\nimport React, { Component } from 'react';\nimport { Card, CardBody, Table } from 'reactstrap';\nimport { Doughnut } from 'react-chartjs-2';\nimport axios from 'axios';\nexport default class Gender extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: [],\n      dataset: {\n        labels: ['Laki - laki', 'Perempuan'],\n        datasets: [{\n          backgroundColor: ['rgba(54, 162, 235, 0.2)', 'rgba(255, 99, 132, 0.2)'],\n          borderColor: ['rgba(54, 162, 235, 0.7)', 'rgba(255, 99, 132, 0.7)'],\n          borderWidth: 1,\n          data: [0, 0]\n        }]\n      }\n    };\n\n    this.componentDidMount = () => {\n      this.ping();\n    };\n\n    this.ping = () => {\n      axios.get('http://10.71.71.24:8080/api/index.php/citizens/ping').then(resp => {\n        console.log(resp);\n        this.getGenders();\n      });\n    };\n\n    this.getGenders = () => {\n      const _this$props = this.props,\n            type = _this$props.type,\n            data = _this$props.data;\n      const params = {\n        region: this.props.type,\n        type: 'jenis_kelamin'\n      };\n\n      if (type === 'kec') {\n        params.no_kec = data.no_kec;\n      } else if (type === 'kel') {\n        params.no_kec = data.no_kec;\n        params.no_kel = data.no_kel;\n      } else if (type === 'rw') {\n        params.no_kec = data.no_kec;\n        params.no_kel = data.no_kel;\n        params.no_rw = data.no_rw;\n      }\n\n      axios.get('http://10.71.71.24:8080/api/index.php/citizens/statistics', {\n        params\n      }).then(({\n        data\n      }) => {\n        const datasets = this.state.dataset.datasets;\n        datasets[0].data = data.map(g => {\n          return g.TOTAL;\n        });\n        this.setState({\n          data,\n          dataset: {\n            datasets\n          }\n        });\n      });\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          data = _this$state.data,\n          dataset = _this$state.dataset;\n    console.log(data);\n    return React.createElement(Card, {\n      className: \"border-0 shadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Doughnut, {\n      data: dataset,\n      width: \"100%\",\n      height: \"100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    })), React.createElement(Table, {\n      bordered: true,\n      striped: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Jenis Kelamin\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Jumlah\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, typeof data !== 'undefined' ? data.map((dat, i) => React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, dat.JENIS_KELAMIN), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, dat.TOTAL))) : '')), React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Total data : \", typeof data !== 'undefined' && data.map(d => d.TOTAL).reduce((a, b) => parseInt(a) + parseInt(b), 0)));\n  }\n\n}","map":{"version":3,"sources":["/Users/andrewyohanes/Documents/map-manado/src/components/Gender.js"],"names":["React","Component","Card","CardBody","Table","Doughnut","axios","Gender","state","data","dataset","labels","datasets","backgroundColor","borderColor","borderWidth","componentDidMount","ping","get","then","resp","console","log","getGenders","props","type","params","region","no_kec","no_kel","no_rw","map","g","TOTAL","setState","render","dat","i","JENIS_KELAMIN","d","reduce","a","b","parseInt"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,KAAzB,QAAsC,YAAtC;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,MAAN,SAAqBN,SAArB,CAA+B;AAAA;AAAA;AAAA,SAE5CO,KAF4C,GAEpC;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,CAAC,aAAD,EAAgB,WAAhB,CADD;AAEPC,QAAAA,QAAQ,EAAE,CAAC;AACTC,UAAAA,eAAe,EAAE,CACf,yBADe,EAEf,yBAFe,CADR;AAKTC,UAAAA,WAAW,EAAE,CACX,yBADW,EAEX,yBAFW,CALJ;AASTC,UAAAA,WAAW,EAAE,CATJ;AAUTN,UAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ;AAVG,SAAD;AAFH;AAFH,KAFoC;;AAAA,SAqB5CO,iBArB4C,GAqBxB,MAAM;AACxB,WAAKC,IAAL;AACD,KAvB2C;;AAAA,SAyB5CA,IAzB4C,GAyBrC,MAAM;AACXX,MAAAA,KAAK,CAACY,GAAN,CAAU,qDAAV,EAAiEC,IAAjE,CAAsEC,IAAI,IAAI;AAC5EC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,aAAKG,UAAL;AACD,OAHD;AAID,KA9B2C;;AAAA,SAgC5CA,UAhC4C,GAgC/B,MAAM;AAAA,0BACM,KAAKC,KADX;AAAA,YACTC,IADS,eACTA,IADS;AAAA,YACHhB,IADG,eACHA,IADG;AAEjB,YAAMiB,MAAM,GAAG;AACbC,QAAAA,MAAM,EAAE,KAAKH,KAAL,CAAWC,IADN;AAEbA,QAAAA,IAAI,EAAE;AAFO,OAAf;;AAIA,UAAIA,IAAI,KAAK,KAAb,EAAoB;AAClBC,QAAAA,MAAM,CAACE,MAAP,GAAgBnB,IAAI,CAACmB,MAArB;AACD,OAFD,MAEO,IAAIH,IAAI,KAAK,KAAb,EAAoB;AACzBC,QAAAA,MAAM,CAACE,MAAP,GAAgBnB,IAAI,CAACmB,MAArB;AACAF,QAAAA,MAAM,CAACG,MAAP,GAAgBpB,IAAI,CAACoB,MAArB;AACD,OAHM,MAGA,IAAIJ,IAAI,KAAK,IAAb,EAAmB;AACxBC,QAAAA,MAAM,CAACE,MAAP,GAAgBnB,IAAI,CAACmB,MAArB;AACAF,QAAAA,MAAM,CAACG,MAAP,GAAgBpB,IAAI,CAACoB,MAArB;AACAH,QAAAA,MAAM,CAACI,KAAP,GAAerB,IAAI,CAACqB,KAApB;AACD;;AACDxB,MAAAA,KAAK,CAACY,GAAN,CAAU,2DAAV,EAAuE;AACrEQ,QAAAA;AADqE,OAAvE,EAEGP,IAFH,CAEQ,CAAC;AAAEV,QAAAA;AAAF,OAAD,KAAc;AAAA,cACDG,QADC,GACc,KAAKJ,KADnB,CACZE,OADY,CACDE,QADC;AAEpBA,QAAAA,QAAQ,CAAC,CAAD,CAAR,CAAYH,IAAZ,GAAmBA,IAAI,CAACsB,GAAL,CAASC,CAAC,IAAI;AAC/B,iBAAOA,CAAC,CAACC,KAAT;AACD,SAFkB,CAAnB;AAGA,aAAKC,QAAL,CAAc;AAAEzB,UAAAA,IAAF;AAAQC,UAAAA,OAAO,EAAE;AAAEE,YAAAA;AAAF;AAAjB,SAAd;AACD,OARD;AASD,KAzD2C;AAAA;;AA2D5CuB,EAAAA,MAAM,GAAG;AAAA,wBACmB,KAAK3B,KADxB;AAAA,UACCC,IADD,eACCA,IADD;AAAA,UACOC,OADP,eACOA,OADP;AAEPW,IAAAA,OAAO,CAACC,GAAR,CAAYb,IAAZ;AACA,WACE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAEC,OAAhB;AAAyB,MAAA,KAAK,EAAC,MAA/B;AAAsC,MAAA,MAAM,EAAC,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAIE,oBAAC,KAAD;AAAO,MAAA,QAAQ,MAAf;AAAgB,MAAA,OAAO,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CADF,CADF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,OAAOD,IAAP,KAAgB,WAAhB,GAA8BA,IAAI,CAACsB,GAAL,CAAS,CAACK,GAAD,EAAMC,CAAN,KACtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,GAAG,CAACE,aAAT,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKF,GAAG,CAACH,KAAT,CAFF,CAD6B,CAA9B,GAKI,EANP,CAPF,CAJF,EAoBE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACgB,OAAOxB,IAAP,KAAgB,WAAhB,IAA+BA,IAAI,CAACsB,GAAL,CAASQ,CAAC,IAAIA,CAAC,CAACN,KAAhB,EAAuBO,MAAvB,CAA8B,CAACC,CAAD,EAAIC,CAAJ,KAAWC,QAAQ,CAACF,CAAD,CAAR,GAAcE,QAAQ,CAACD,CAAD,CAA/D,EAAqE,CAArE,CAD/C,CApBF,CADF;AA0BD;;AAxF2C","sourcesContent":["import React, { Component } from 'react'\nimport { Card, CardBody, Table } from 'reactstrap';\nimport { Doughnut } from 'react-chartjs-2';\nimport axios from 'axios';\n\nexport default class Gender extends Component {\n\n  state = {\n    data: [],\n    dataset: {\n      labels: ['Laki - laki', 'Perempuan'],\n      datasets: [{\n        backgroundColor: [\n          'rgba(54, 162, 235, 0.2)',\n          'rgba(255, 99, 132, 0.2)',\n        ],\n        borderColor: [\n          'rgba(54, 162, 235, 0.7)',\n          'rgba(255, 99, 132, 0.7)',\n        ],\n        borderWidth: 1,\n        data: [0, 0]\n      }]\n    }\n  }\n\n  componentDidMount = () => {\n    this.ping();\n  }\n\n  ping = () => {\n    axios.get('http://10.71.71.24:8080/api/index.php/citizens/ping').then(resp => {\n      console.log(resp);\n      this.getGenders();\n    })\n  }\n\n  getGenders = () => {\n    const { type, data } = this.props;\n    const params = {\n      region: this.props.type,\n      type: 'jenis_kelamin',\n    };\n    if (type === 'kec') {\n      params.no_kec = data.no_kec\n    } else if (type === 'kel') {\n      params.no_kec = data.no_kec\n      params.no_kel = data.no_kel\n    } else if (type === 'rw') {\n      params.no_kec = data.no_kec\n      params.no_kel = data.no_kel\n      params.no_rw = data.no_rw\n    }\n    axios.get('http://10.71.71.24:8080/api/index.php/citizens/statistics', {\n      params\n    }).then(({ data }) => {\n      const { dataset: { datasets } } = this.state;\n      datasets[0].data = data.map(g => {\n        return g.TOTAL\n      })\n      this.setState({ data, dataset: { datasets } });\n    })\n  }\n\n  render() {\n    const { data, dataset } = this.state\n    console.log(data);\n    return (\n      <Card className=\"border-0 shadow\">\n        <CardBody>\n          <Doughnut data={dataset} width='100%' height='100' />\n        </CardBody>\n        <Table bordered striped>\n          <thead>\n            <tr>\n              <th>Jenis Kelamin</th>\n              <th>Jumlah</th>\n            </tr>\n          </thead>\n          <tbody>\n            {typeof data !== 'undefined' ? data.map((dat, i) => (\n              <tr>\n                <td>{dat.JENIS_KELAMIN}</td>\n                <td>{dat.TOTAL}</td>\n              </tr>\n            )) : ''}\n          </tbody>\n        </Table>\n        <CardBody>\n          Total data : {typeof data !== 'undefined' && data.map(d => d.TOTAL).reduce((a, b) => (parseInt(a) + parseInt(b)), 0)}\n        </CardBody>\n      </Card>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}