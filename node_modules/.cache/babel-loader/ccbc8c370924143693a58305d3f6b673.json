{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar mapbox_gl_1 = __importDefault(require(\"mapbox-gl\"));\n\nvar Basemap_1 = __importDefault(require(\"./classes/Basemap\"));\n\nvar http_1 = require(\"./utils/http\");\n\nvar District_1 = require(\"./classes/District\");\n\nvar Subdistrict_1 = require(\"./classes/Subdistrict\");\n\nvar Neighbor_1 = require(\"./classes/Neighbor\");\n/**\r\n * Class utama dari GeoMan\r\n * @class GeoMan\r\n */\n\n\nvar GeoMan =\n/** @class */\nfunction () {\n  /**\r\n   * Membuat instance dari class GeoMan\r\n   * @param baseURL base url server geoman\r\n   * @param port port server geoman\r\n   * @param options map options\r\n   * @param style style map GeoMan: DEFAULT | DARK | LIGHT | WORLD\r\n   */\n  function GeoMan(baseURL, port, options, style) {\n    if (style === void 0) {\n      style = 'DEFAULT';\n    }\n\n    this.sources = [];\n    this.layers = [];\n    this.baseURL = baseURL;\n    this.port = port;\n    this.fullURL = \"\" + this.baseURL + (this.port === 80 ? '' : \":\" + this.port);\n    this.http = new http_1.HTTP(this.baseURL, this.port);\n    var link = document.createElement('link');\n    link.rel = 'stylesheet';\n    link.href = 'https://api.tiles.mapbox.com/mapbox-gl-js/v1.1.1/mapbox-gl.css';\n    document.head.appendChild(link);\n    options.style = this.fullURL + \"/api/public/tclayer?port=\" + this.port + \"&style=\" + style.toLowerCase();\n    this.center = options.center;\n    this.map = new mapbox_gl_1.default.Map(options);\n  }\n  /**\r\n   * Set callback saat style map sudah selesai di-load\r\n   */\n\n\n  GeoMan.prototype.setReadyCallback = function (fn) {\n    this.map.on('style.load', fn);\n  };\n  /**\r\n   * Tambah GeoJSON ke map\r\n   * @param id string unik untuk menandai layer\r\n   * @param data data geojson\r\n   */\n\n\n  GeoMan.prototype.addGeoJSON = function (id, type, data) {\n    return this.map.addLayer({\n      id: id,\n      type: type,\n      source: {\n        type: 'geojson',\n        data: data\n      }\n    });\n  };\n  /**\r\n   * Hapus layer GeoJSON dari map\r\n   * @param id id layer untuk dihapus\r\n   */\n\n\n  GeoMan.prototype.removeGeoJSON = function (id) {\n    return this.map.removeLayer(id);\n  };\n  /**\r\n   * Ambil daftar basemap publik\r\n   */\n\n\n  GeoMan.prototype.getBasemaps = function () {\n    var _this = this;\n\n    return this.http.get('/maps/basemaps').then(function (data) {\n      return data.map(function (r) {\n        return new Basemap_1.default(_this, r);\n      });\n    });\n  };\n  /**\r\n   * Ambil daftar kecamatan\r\n   */\n\n\n  GeoMan.prototype.getDistricts = function () {\n    var _this = this;\n\n    return this.http.get('/maps/districts').then(function (data) {\n      return data.map(function (r) {\n        return new District_1.District(_this, r);\n      });\n    });\n  };\n  /**\r\n   * Ambil kecamatan berdasarkan id\r\n   * @param id id kecamatan\r\n   */\n\n\n  GeoMan.prototype.getDistrict = function (id) {\n    var _this = this;\n\n    return this.http.get(\"/maps/districts/\" + id).then(function (data) {\n      return new District_1.District(_this, data);\n    });\n  };\n  /**\r\n   * Ambil kelurahan berdasarkan id kecamatan dan id kelurahan\r\n   * @param district_id id kecamatan\r\n   * @param subdistrict_id id kelurahan\r\n   */\n\n\n  GeoMan.prototype.getSubdistrict = function (district_id, subdistrict_id) {\n    var _this = this;\n\n    return this.http.get(\"/maps/districts/\" + district_id + \"/subdistricts/\" + subdistrict_id).then(function (data) {\n      var district = new District_1.District(_this, data.district);\n      return new Subdistrict_1.Subdistrict(_this, district, data);\n    });\n  };\n  /**\r\n   * Ambil lingkungan berdasarkan id kecamatan dan id kelurahan dan id lingkungan\r\n   * @param district_id id kecamatan\r\n   * @param subdistrict_id id kelurahan\r\n   * @param neighbor_id id lingkungan\r\n   */\n\n\n  GeoMan.prototype.getNeighbor = function (district_id, subdistrict_id, neighbor_id) {\n    var _this = this;\n\n    return this.http.get(\"/maps/districts/\" + district_id + \"/subdistricts/\" + subdistrict_id + \"/neighbors/\" + neighbor_id).then(function (data) {\n      var district = new District_1.District(_this, data.district);\n      var subdistrict = new Subdistrict_1.Subdistrict(_this, district, data.subdistrict);\n      return new Neighbor_1.Neighbor(_this, district, subdistrict, data);\n    });\n  };\n  /**\r\n   * Mengubah style map\r\n   * @param style id style\r\n   */\n\n\n  GeoMan.prototype.setStyle = function (style) {\n    this.map.setStyle(this.fullURL + \"/api/public/tclayer?port=\" + this.port + \"&style=\" + style.toLowerCase());\n  };\n  /**\r\n   * Clear semua fokus daerah dan center ke default\r\n   */\n\n\n  GeoMan.prototype.clearFocuses = function () {\n    if (this.map.getLayer('region-lay')) {\n      this.map.removeLayer('region-lay');\n      this.map.removeSource('region-lay');\n    }\n\n    this.map.flyTo({\n      center: this.center\n    });\n  };\n  /**\r\n   * Menentukan event di label wilayah\r\n   * @param ev event untuk di-attach\r\n   * @param regionName nama region yang akan di-attach event\r\n   * @param cb callback ketika event terjadi\r\n   */\n\n\n  GeoMan.prototype.setRegionLabelEvent = function (ev, regionName, cb) {\n    var _this = this;\n\n    var layerName = \"tc-basemap-layer-\" + regionName + \"-label\";\n    this.map.on(ev, layerName, function (d) {\n      return cb(d.features ? d.features[0] : null, d);\n    });\n    this.map.on('mouseenter', layerName, function (e) {\n      _this.map.getCanvas().style.cursor = 'pointer';\n    });\n    this.map.on('mouseleave', layerName, function (e) {\n      _this.map.getCanvas().style.cursor = '';\n    });\n  };\n\n  GeoMan.Styles = {\n    DEFAULT: 'DEFAULT',\n    DARK: 'DARK',\n    LIGHT: 'LIGHT',\n    WORLD: 'WORLD',\n    REGIONAL: 'REGIONAL',\n    SATELLITE: 'SATELLITE'\n  };\n  return GeoMan;\n}();\n\nexports.default = GeoMan;","map":{"version":3,"sources":["../src/geoman.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar mapbox_gl_1 = __importDefault(require(\"mapbox-gl\"));\r\nvar Basemap_1 = __importDefault(require(\"./classes/Basemap\"));\r\nvar http_1 = require(\"./utils/http\");\r\nvar District_1 = require(\"./classes/District\");\r\nvar Subdistrict_1 = require(\"./classes/Subdistrict\");\r\nvar Neighbor_1 = require(\"./classes/Neighbor\");\r\n/**\r\n * Class utama dari GeoMan\r\n * @class GeoMan\r\n */\r\nvar GeoMan = /** @class */ (function () {\r\n    /**\r\n     * Membuat instance dari class GeoMan\r\n     * @param baseURL base url server geoman\r\n     * @param port port server geoman\r\n     * @param options map options\r\n     * @param style style map GeoMan: DEFAULT | DARK | LIGHT | WORLD\r\n     */\r\n    function GeoMan(baseURL, port, options, style) {\r\n        if (style === void 0) { style = 'DEFAULT'; }\r\n        this.sources = [];\r\n        this.layers = [];\r\n        this.baseURL = baseURL;\r\n        this.port = port;\r\n        this.fullURL = \"\" + this.baseURL + (this.port === 80 ? '' : \":\" + this.port);\r\n        this.http = new http_1.HTTP(this.baseURL, this.port);\r\n        var link = document.createElement('link');\r\n        link.rel = 'stylesheet';\r\n        link.href = 'https://api.tiles.mapbox.com/mapbox-gl-js/v1.1.1/mapbox-gl.css';\r\n        document.head.appendChild(link);\r\n        options.style = this.fullURL + \"/api/public/tclayer?port=\" + this.port + \"&style=\" + style.toLowerCase();\r\n        this.center = options.center;\r\n        this.map = new mapbox_gl_1.default.Map(options);\r\n    }\r\n    /**\r\n     * Set callback saat style map sudah selesai di-load\r\n     */\r\n    GeoMan.prototype.setReadyCallback = function (fn) {\r\n        this.map.on('style.load', fn);\r\n    };\r\n    /**\r\n     * Tambah GeoJSON ke map\r\n     * @param id string unik untuk menandai layer\r\n     * @param data data geojson\r\n     */\r\n    GeoMan.prototype.addGeoJSON = function (id, type, data) {\r\n        return this.map.addLayer({\r\n            id: id,\r\n            type: type,\r\n            source: {\r\n                type: 'geojson',\r\n                data: data\r\n            },\r\n        });\r\n    };\r\n    /**\r\n     * Hapus layer GeoJSON dari map\r\n     * @param id id layer untuk dihapus\r\n     */\r\n    GeoMan.prototype.removeGeoJSON = function (id) {\r\n        return this.map.removeLayer(id);\r\n    };\r\n    /**\r\n     * Ambil daftar basemap publik\r\n     */\r\n    GeoMan.prototype.getBasemaps = function () {\r\n        var _this = this;\r\n        return this.http.get('/maps/basemaps')\r\n            .then(function (data) {\r\n            return data.map(function (r) { return new Basemap_1.default(_this, r); });\r\n        });\r\n    };\r\n    /**\r\n     * Ambil daftar kecamatan\r\n     */\r\n    GeoMan.prototype.getDistricts = function () {\r\n        var _this = this;\r\n        return this.http.get('/maps/districts')\r\n            .then(function (data) {\r\n            return data.map(function (r) { return new District_1.District(_this, r); });\r\n        });\r\n    };\r\n    /**\r\n     * Ambil kecamatan berdasarkan id\r\n     * @param id id kecamatan\r\n     */\r\n    GeoMan.prototype.getDistrict = function (id) {\r\n        var _this = this;\r\n        return this.http.get(\"/maps/districts/\" + id)\r\n            .then(function (data) {\r\n            return new District_1.District(_this, data);\r\n        });\r\n    };\r\n    /**\r\n     * Ambil kelurahan berdasarkan id kecamatan dan id kelurahan\r\n     * @param district_id id kecamatan\r\n     * @param subdistrict_id id kelurahan\r\n     */\r\n    GeoMan.prototype.getSubdistrict = function (district_id, subdistrict_id) {\r\n        var _this = this;\r\n        return this.http.get(\"/maps/districts/\" + district_id + \"/subdistricts/\" + subdistrict_id)\r\n            .then(function (data) {\r\n            var district = new District_1.District(_this, data.district);\r\n            return new Subdistrict_1.Subdistrict(_this, district, data);\r\n        });\r\n    };\r\n    /**\r\n     * Ambil lingkungan berdasarkan id kecamatan dan id kelurahan dan id lingkungan\r\n     * @param district_id id kecamatan\r\n     * @param subdistrict_id id kelurahan\r\n     * @param neighbor_id id lingkungan\r\n     */\r\n    GeoMan.prototype.getNeighbor = function (district_id, subdistrict_id, neighbor_id) {\r\n        var _this = this;\r\n        return this.http.get(\"/maps/districts/\" + district_id + \"/subdistricts/\" + subdistrict_id + \"/neighbors/\" + neighbor_id)\r\n            .then(function (data) {\r\n            var district = new District_1.District(_this, data.district);\r\n            var subdistrict = new Subdistrict_1.Subdistrict(_this, district, data.subdistrict);\r\n            return new Neighbor_1.Neighbor(_this, district, subdistrict, data);\r\n        });\r\n    };\r\n    /**\r\n     * Mengubah style map\r\n     * @param style id style\r\n     */\r\n    GeoMan.prototype.setStyle = function (style) {\r\n        this.map.setStyle(this.fullURL + \"/api/public/tclayer?port=\" + this.port + \"&style=\" + style.toLowerCase());\r\n    };\r\n    /**\r\n     * Clear semua fokus daerah dan center ke default\r\n     */\r\n    GeoMan.prototype.clearFocuses = function () {\r\n        if (this.map.getLayer('region-lay')) {\r\n            this.map.removeLayer('region-lay');\r\n            this.map.removeSource('region-lay');\r\n        }\r\n        this.map.flyTo({ center: this.center });\r\n    };\r\n    /**\r\n     * Menentukan event di label wilayah\r\n     * @param ev event untuk di-attach\r\n     * @param regionName nama region yang akan di-attach event\r\n     * @param cb callback ketika event terjadi\r\n     */\r\n    GeoMan.prototype.setRegionLabelEvent = function (ev, regionName, cb) {\r\n        var _this = this;\r\n        var layerName = \"tc-basemap-layer-\" + regionName + \"-label\";\r\n        this.map.on(ev, layerName, function (d) { return cb(d.features ? d.features[0] : null, d); });\r\n        this.map.on('mouseenter', layerName, function (e) {\r\n            _this.map.getCanvas().style.cursor = 'pointer';\r\n        });\r\n        this.map.on('mouseleave', layerName, function (e) {\r\n            _this.map.getCanvas().style.cursor = '';\r\n        });\r\n    };\r\n    GeoMan.Styles = {\r\n        DEFAULT: 'DEFAULT',\r\n        DARK: 'DARK',\r\n        LIGHT: 'LIGHT',\r\n        WORLD: 'WORLD',\r\n        REGIONAL: 'REGIONAL',\r\n        SATELLITE: 'SATELLITE'\r\n    };\r\n    return GeoMan;\r\n}());\r\nexports.default = GeoMan;\r\n//# sourceMappingURL=geoman.js.map"]},"metadata":{},"sourceType":"script"}