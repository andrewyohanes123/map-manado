{"ast":null,"code":"var _jsxFileName = \"/Users/andrewyohanes/Documents/map-manado/src/components/BloodType.js\";\nimport React, { Component } from 'react';\nimport { Card, CardBody, Table } from 'reactstrap';\nimport { Doughnut } from 'react-chartjs-2';\nimport axios from 'axios';\nexport default class BloodType extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: [{\n        a: 0,\n        b: 0\n      }],\n      dataset: {\n        labels: [],\n        datasets: [{\n          backgroundColor: ['rgba(54, 162, 235, 0.2)', 'rgba(255, 99, 132, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)', 'rgba(34, 47, 62,0.2)', 'rgba(16, 172, 132,0.2)', 'rgba(95, 39, 205,0.2)', 'rgba(1, 163, 164,0.2)', 'rgba(255, 159, 67,0.2)', 'rgba(29, 209, 161,0.2)', 'rgba(84, 160, 255,0.2)'],\n          borderColor: ['rgba(54, 162, 235, 0.7)', 'rgba(255, 99, 132, 0.7)', 'rgba(255, 206, 86, 0.7)', 'rgba(75, 192, 192, 0.7)', 'rgba(153, 102, 255, 0.7)', 'rgba(255, 159, 64, 0.7)', 'rgba(34, 47, 62,0.7)', 'rgba(16, 172, 132,0.7)', 'rgba(95, 39, 205,0.7)', 'rgba(1, 163, 164,0.7)', 'rgba(255, 159, 67,0.7)', 'rgba(29, 209, 161,0.7)', 'rgba(84, 160, 255,0.7)'],\n          borderWidth: 1,\n          data: [0, 0]\n        }]\n      }\n    };\n\n    this.componentDidMount = () => {\n      this.ping();\n    };\n\n    this.ping = () => {\n      axios.get('http://10.71.71.24:8080/api/index.php/citizens/ping').then(resp => {\n        console.log(resp);\n        this.getGenders();\n      });\n    };\n\n    this.getGenders = () => {\n      const _this$props = this.props,\n            type = _this$props.type,\n            data = _this$props.data;\n      const params = {\n        region: this.props.type,\n        type: 'golongan_darah'\n      };\n\n      if (type === 'kec') {\n        params.no_kec = data.no_kec;\n      } else if (type === 'kel') {\n        params.no_kec = data.no_kec;\n        params.no_kel = data.no_kel;\n      } else if (type === 'rw') {\n        params.no_kec = data.no_kec;\n        params.no_kel = data.no_kel;\n        params.no_rw = data.no_rw;\n      }\n\n      axios.get('http://10.71.71.24:8080/api/index.php/citizens/statistics', {\n        params\n      }).then(({\n        data\n      }) => {\n        let _this$state$dataset = this.state.dataset,\n            datasets = _this$state$dataset.datasets,\n            labels = _this$state$dataset.labels;\n        datasets[0].data = data.map(g => {\n          return g.TOTAL;\n        });\n        labels = data.map(g => g.GOLONGAN_DARAH);\n        this.setState({\n          data,\n          dataset: {\n            datasets,\n            labels\n          }\n        });\n      });\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          data = _this$state.data,\n          dataset = _this$state.dataset;\n    return React.createElement(Card, {\n      className: \"border-0 shadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Doughnut, {\n      data: dataset,\n      width: \"100%\",\n      height: \"100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    })), React.createElement(Table, {\n      bordered: true,\n      striped: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, Object.keys(data[0]).map((col, i) => React.createElement(\"th\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, col)))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, typeof data !== 'undefined' ? data.map((dat, i) => React.createElement(\"tr\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, Object.keys(dat).map((col, i) => React.createElement(\"td\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, dat[col])))) : '')), React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Total data : \", typeof data !== 'undefined' && data.map(d => d.TOTAL).reduce((a, b) => parseInt(a) + parseInt(b), 0)));\n  }\n\n}","map":{"version":3,"sources":["/Users/andrewyohanes/Documents/map-manado/src/components/BloodType.js"],"names":["React","Component","Card","CardBody","Table","Doughnut","axios","BloodType","state","data","a","b","dataset","labels","datasets","backgroundColor","borderColor","borderWidth","componentDidMount","ping","get","then","resp","console","log","getGenders","props","type","params","region","no_kec","no_kel","no_rw","map","g","TOTAL","GOLONGAN_DARAH","setState","render","Object","keys","col","i","dat","d","reduce","parseInt"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Card, CardBody, Table } from 'reactstrap';\nimport { Doughnut } from 'react-chartjs-2';\nimport axios from 'axios';\n\nexport default class BloodType extends Component {\n\n  state = {\n    data: [{a:0,b:0}],\n    dataset: {\n      labels: [],\n      datasets: [{\n        backgroundColor: [\n          'rgba(54, 162, 235, 0.2)',\n          'rgba(255, 99, 132, 0.2)',\n          'rgba(255, 206, 86, 0.2)',\n          'rgba(75, 192, 192, 0.2)',\n          'rgba(153, 102, 255, 0.2)',\n          'rgba(255, 159, 64, 0.2)',\n          'rgba(34, 47, 62,0.2)',\n          'rgba(16, 172, 132,0.2)',\n          'rgba(95, 39, 205,0.2)',\n          'rgba(1, 163, 164,0.2)',\n          'rgba(255, 159, 67,0.2)',\n          'rgba(29, 209, 161,0.2)',\n          'rgba(84, 160, 255,0.2)'\n        ],\n        borderColor: [\n          'rgba(54, 162, 235, 0.7)',\n          'rgba(255, 99, 132, 0.7)',\n          'rgba(255, 206, 86, 0.7)',\n          'rgba(75, 192, 192, 0.7)',\n          'rgba(153, 102, 255, 0.7)',\n          'rgba(255, 159, 64, 0.7)',\n          'rgba(34, 47, 62,0.7)',\n          'rgba(16, 172, 132,0.7)',\n          'rgba(95, 39, 205,0.7)',\n          'rgba(1, 163, 164,0.7)',\n          'rgba(255, 159, 67,0.7)',\n          'rgba(29, 209, 161,0.7)',\n          'rgba(84, 160, 255,0.7)'\n        ],\n        borderWidth: 1,\n        data: [0, 0]\n      }]\n    }\n  }\n\n  componentDidMount = () => {\n    this.ping();\n  }\n\n  ping = () => {\n    axios.get('http://10.71.71.24:8080/api/index.php/citizens/ping').then(resp => {\n      console.log(resp);\n      this.getGenders();\n    })\n  }\n\n  getGenders = () => {\n    const { type, data } = this.props;\n    const params = {\n      region: this.props.type,\n      type: 'golongan_darah',\n    };\n    if (type === 'kec') {\n      params.no_kec = data.no_kec\n    } else if (type === 'kel') {\n      params.no_kec = data.no_kec\n      params.no_kel = data.no_kel\n    } else if (type === 'rw') {\n      params.no_kec = data.no_kec\n      params.no_kel = data.no_kel\n      params.no_rw = data.no_rw\n    }\n    axios.get('http://10.71.71.24:8080/api/index.php/citizens/statistics', {\n      params\n    }).then(({ data }) => {\n      let { dataset: { datasets, labels } } = this.state;\n      datasets[0].data = data.map(g => {\n        return g.TOTAL\n      })\n      labels = data.map(g => (g.GOLONGAN_DARAH))\n      this.setState({ data, dataset: { datasets, labels }, });\n    })\n  }\n\n  render() {\n    const { data, dataset } = this.state\n    return (\n      <Card className=\"border-0 shadow\">\n        <CardBody>\n          <Doughnut data={dataset} width='100%' height='100' />\n        </CardBody>\n        <Table bordered striped>\n          <thead>\n            <tr>\n              {/* {typeof data !== 'undefined' ? data.map((dat) => ( */}\n                {Object.keys(data[0]).map((col, i) => (\n                  <th key={i}>{col}</th>\n                ))}\n              {/* )) : ''} */}\n            </tr>\n          </thead>\n          <tbody>\n            {typeof data !== 'undefined' ? data.map((dat, i) => (\n              <tr key={i}>\n                {Object.keys(dat).map((col, i) => (\n                  <td key={i}>{dat[col]}</td>\n                ))}\n              </tr>\n            )) : ''}\n          </tbody>\n        </Table>\n        <CardBody>\n          Total data : {typeof data !== 'undefined' && data.map(d => d.TOTAL).reduce((a, b) => (parseInt(a) + parseInt(b)), 0)}\n        </CardBody>\n      </Card>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}